<!doctype html>
<html ng-app="scotchTodo" lang="en">

<head X-Content-Type-Options: nosniff>
    <!-- SPELLS -->
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js"></script><!-- load angular -->
    <!-- ??? Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <!-- ??? Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.8/angular-filter.min.js"></script>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="/" />

    <script>
        angular.module('myListsController', [])

            .controller('mainController', ['$scope', '$http', 'myLists', function ($scope, $http, myLists) {
                console.log("myAdminLists.ejs: myListsController mainController reached");
                $scope.formData = {};
                $scope.loading = true;
                $scope.myListsTableParams = {};
                var userEmail = "<%= user.local.email %>";
                $("#listnametaken").hide();
                $("#itemnametaken").hide();
                $("#myItemsTable").hide();
                $("#addItemForm").hide();
                $("#addListForm").hide();

                // GET =====================================================================
                myLists.get(userEmail)
                    .success(function (data) {
                        console.log("myAdminLists.ejs: mainController myLists.get success");
                        $scope.myLists = data;
                        $scope.loading = false;
                        $("#listnametaken").hide();
                        $("#itemnametaken").hide();
                        $("#myItemsTable").hide();
                        $("#addItemForm").hide();
                    });
                
                myLists.getAllGrps()
                    .success(function (grpdata) {
                        console.log("myAdminLists.ejs: mainController myLists.getAllGrps success");
                        $scope.myGrps = grpdata;
                        $scope.myGrps.unshift("Everyone" , "Just Me");
                        console.log("myAdminLists.ejs: myLists.getAllGrps: $scope.myGrps: " + JSON.stringify($scope.myGrps));
                        for (var i = 0; i < $scope.myGrps.length; i++) {
                            console.log("$scope.myGrps[i] = " + $scope.myGrps[i]);
                        }
                });

                // CREATE ==================================================================
                $scope.createMyList = function () {
                    console.log("myAdminLists.ejs:  mainController createMyList ");
                    if ($scope.formData.name != undefined) {
                        $scope.loading = true;
                        $scope.formData.owner = userEmail;
                        console.log("myAdminLists.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                        myLists.create($scope.formData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myAdminLists.ejs: createMyList ERROR data: " + JSON.stringify(data));
                                console.log("myAdminLists.ejs: createMyList ERROR data.message: " + data.message);
                                message = data.message;
                                $("#listnametaken").show();

                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                console.log("myAdminLists.ejs: createMyList $scope.myLists: " + JSON.stringify($scope.myLists));
                            });
                    }
                };

                $scope.deleteMyList = function (id) {
                    console.log("myAdminLists.ejs:  mainController deleteMyList id: " + id);
                    //$scope.loading = true;

                    if (confirm('Are you sure you want to delete this list ?') == true) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.delMyList(id)
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                $("#itemnametaken").hide();
                                $("#myItemsTable").hide();
                                $("#addItemForm").hide();
                            });
                    } else {
                        console.log(" No delete");
                    }
                };

                $scope.itemsOfList = function (listName) {
                    console.log("myAdminLists.ejs:  mainController itemsOfList listName: " + listName);
                    $("#addListForm").hide();
                    $scope.currentListName = listName;
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $scope.myItems2 = [];
                            $("#listnametaken").hide();
                            $("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                        });
                };

                $scope.createMyItem = function () {
                    console.log("myAdminLists.ejs:  mainController createMyItem ");
                    if ($scope.formItemData.name != undefined) {
                        if (checkForDupItem()) {
                            $("#itemnametaken").show();
                            return;
                        }
                        $scope.loading = true;
                        $scope.formItemData.list = $scope.currentListName;
                        $scope.formItemData.owner = userEmail;
                        console.log("myAdminLists.ejs: $scope.formItemData: " + JSON.stringify($scope.formItemData));
                        myLists.createItem($scope.formItemData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myAdminLists.ejs: createMyItem ERROR data: " + JSON.stringify(data));
                                console.log("myAdminLists.ejs: createMyItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                $("#itemnametaken").show();
                            })
                            .success(function (data) {
                                //$scope.loading = false;
                                $scope.formItemData = {}; // clear the form so our user is ready to enter another
                                $scope.myItems = data; // 

                                myLists.get(userEmail)
                                    .success(function (dataX) {
                                    //console.log("myAdminLists.ejs: mainController myLists.get success");
                                    $scope.myLists = dataX;
                                    $scope.loading = false;
                                    $("#itemnametaken").hide();
                                    //console.log("myAdminLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                                });
                            });
                    };
                };
                
                $scope.myRemoveItem = function (id) {
                    console.log("myAdminLists.ejs:  mainController myRemoveItem ");
                    if(confirm("Really remove this item from the list?")) { 
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.deleteItem({ "listName" : $scope.currentListName, "id" : id })
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myAdminLists.ejs: myRemoveItem ERROR data: " + JSON.stringify(data));
                                console.log("myAdminLists.ejs: myRemoveItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                $("#itemnametaken").show(); // FIX this
                            })
				            .success(function(data) {
					            //$scope.loading = false;
                                $scope.myItems = data; // 
                                $("#itemnametaken").hide();
                                console.log("myAdminLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));

                                myLists.get(userEmail)
                                    .success(function (dataX) {
                                    $scope.myLists = dataX;
                                    $scope.loading = false;
                                });
				        });
                    }; 
		        };

                $scope.myEditItem = function () {
                    console.log("myAdminLists.ejs:  mainController myEditItem ");
                    alert("Not yet implemented!");
                    //if(confirm("Not yet implemented")) {   
                      //  console.log("Yes"); 
                    //} else {
                      //  console.log("No");
                    //}
                };

                function checkForDupItem() {
                    for (var i = 0; i < $scope.myItems.length; i++ ) {
                        if ($scope.myItems[i].name == $scope.formItemData.name) {
                            return true;
                        }
                    }
                    return false;
                }

                $scope.mySelectItem = function (myItem) {
                    console.log("myAdminListsRank.ejs:  mainController mySelectItem ");
                    console.log("myAdminLists.ejs: mySelectItem $scope.myItems: " + JSON.stringify($scope.myItems));
                    $scope.myItems2.push(myItem);
                    $scope.myItems = $scope.myItems.filter(item => item._id !== myItem._id);   
                    console.log("myAdminLists.ejs: mySelectItem $scope.myItems2: " + JSON.stringify($scope.myItems2));
                };

                $scope.myRemoveItem2 = function (myItem) {
                    console.log("myAdminListsRank.ejs:  mainController myRemoveItem2 ");
                    console.log("myAdminLists.ejs: myRemoveItem2 $scope.myItems: " + JSON.stringify($scope.myItems));
                    $scope.myItems.push(myItem);
                    $scope.myItems2 = $scope.myItems2.filter(item => item._id !== myItem._id);   
                    console.log("myAdminLists.ejs: myRemoveItem2 $scope.myItems2: " + JSON.stringify($scope.myItems2));
                };

                $scope.moveUp = function (value, index) {
                    console.log("moveUp reached");
                    if (index > 0) {
                        const tmp = this.myItems2[index - 1];
                        this.myItems2[index - 1] = this.myItems2[index];
                        this.myItems2[index] = tmp;
                    }
                };

                $scope.moveDown = function (value, index) {
                    console.log("moveDown reached");
                    if (index + 1 < this.myItems2.length) {
                        const tmp = this.myItems2[index + 1];
                        this.myItems2[index + 1] = this.myItems2[index];
                        this.myItems2[index] = tmp;
                    }
                };

                $scope.saveMyRanking = function() {
                    console.log("myAdminListsRank.ejs: saveMyRanking $scope.myItems2: " + JSON.stringify($scope.myItems2));
                    //for (var i = 0; i < $scope.myItems2.length; i++ ) {
                    //}
                    $scope.loading = true;
                    //$scope.formItemData.list = $scope.currentListName;
                    //$scope.formItemData.owner = userEmail;
                    myLists.rankItems($scope.myItems2)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myAdminLists.ejs: saveMyRanking ERROR data: " + JSON.stringify(data));
                                console.log("myAdminLists.ejs: saveMyRanking ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                //$("#itemnametaken").show();
                            })
                            .success(function (data) {
                                $scope.itemsOfList($scope.currentListName);
                                //$scope.formItemData = {}; // clear the form so our user is ready to enter another
                                //$scope.myItems = data; // 
                                //myLists.get(userEmail)
                                  //  .success(function (dataX) {
                                    //console.log("myAdminLists.ejs: mainController myLists.get success");
                                  //  $scope.myLists = dataX;
                                  //  $scope.loading = false;
                                  //  $("#itemnametaken").hide();
                                    //console.log("myAdminLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                                //});
                            });
                }

                $scope.myCopyLink = function (listName) {
                    console.log("myCopyLink call with $scope.currentListName = " +  $scope.currentListName);
                    console.log("window.location.href: " + window.location.href);
                    var selBox = document.createElement('textarea');
                    selBox.style.position = 'fixed';
                    selBox.style.left = '0';
                    selBox.style.top = '0';
                    selBox.style.opacity = '0';
                    //selBox.value = "http://localhost:8080/myPublicListsItems/" + $scope.currentListName; /myPublicListsItems
                    //http://localhost:8080/myAdminListsRankItems/list%201%20for%20rg21
                    var tmpURLx = window.location.href;
                    tmpURLx = tmpURLx.replace("myAdminListsRank", "myPublicLists");
                    //selBox.value =  window.location.href + "Items/" + $scope.currentListName;
                    selBox.value =  tmpURLx + "Items/" + $scope.currentListName;
                    document.body.appendChild(selBox);
                    selBox.focus();
                    selBox.select();
                    document.execCommand('copy');
                    document.body.removeChild(selBox);
                }

            }]);
    </script>

    <script>
        angular.module('myListsService', [])
            .factory('myLists', ['$http', function ($http) {
                return {
                    get: function (owner) {
                        console.log("myAdminLists.ejs: service myLists get");
                        return $http.get('/api/myAdminLists');
                        //return $http.get('/api/myLists');
                        //return $http.get('/api/myAdminListsOwner/' + owner);
                    },
                    create: function (Data) {
                        console.log("myAdminLists.ejs: service myLists create");
                        return $http.post('/api/myAdminLists', Data);
                    },
                    delete: function (id) {
                        console.log("myAdminLists.ejs: service myLists delete");
                        return $http.delete('/api/myLists/' + id);
                    },
                    delMyList: function (id) {
                        console.log("myAdminLists.ejs: service myLists delMyList");
                        return $http.delete('/api/myLists/' + id);
                    },
                    change: function (id) {
                        console.log("myAdminLists.ejs: service myLists change");
                        return $http.get('/api/myLists/' + id);
                    },
                    getItems: function (listName) {
                        console.log("myAdminLists.ejs: service myLists getItems");
                        return $http.get('/api/myAdminItems' + listName);
                    },
                    createItem: function (Data) {
                        console.log("myAdminLists.ejs: service myLists createItem");
                        return $http.post('/api/myAdminItems', Data);
                    },
                    deleteItem: function (Data) {
                        console.log("myAdminLists.ejs: service myLists deleteItem");
                        return $http.post('/api/myItemsRemove' , Data); // + {"listName" : listName, "id" : id});
                    },
                    getAllGrps: function () {
                        console.log("myAdminLists.ejs: service myLists getAllGrps");
                        return $http.get('/api/getAllMyGrps');
                    },
                    rankItems: function (Data) {
                        console.log("myAdminLists.ejs: service myLists rankItems");
                        return $http.post('/api/myItemsRank' , Data);
                    }
            }}]);
    </script>

    <script>
        angular.module('scotchTodo', ['myListsController', 'myListsService', 'angular.filter']);
    </script>
    <title>Top 10 Lists</title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" />
    <style>
        body {
            padding-top: 0px;
            word-wrap: break-word;
        }
    </style>
</head>

<body class="bg-secondary text-white">
    <div id='mainx' class="container-fluid">
        <% include myNavBar %>
        <div ng-viewx>
            <!-- h3><span class="fa fa-sign-in"></span> RG's List App - My Lists Rank - Under Development</h3 -->
            <div ng-controller="mainController">
                <div class="container">
                    <table>
                        <tr>
                            <td>
                                <div ng-view id=myListsTable>
                                    <h3><span class="fa "></span>for Admin: All Lists (Items: {{ myLists.length }})</h3>                                  
                                    <div id="myLists-listx">
                                        <!-- div class="col-sm-4 col-sm-offset-4" -->
                                        <div>
                                            <table ng-table="myListsTableParams" border="1" cellspacing="0"
                                                cellpadding="4">
                                                <tr>

                                                    <th>Name</th>
                                                    <th>Description</th>
                                                    <th>Owner</th>
                                                    <th>Private</th>
                                                    <th>Group</th>
                                                    <th>Edit</th>
                                                    <th>Suggestion</th>
                                                    <th>Vote</th>
                                                    <th>ItemCnt</th>
                                                    <th>Rank</th>
                                                </tr>
                                                <tbody class="problemcheckboxx" ng-repeat="aList in myLists">

                            <td>{{ aList.name }}</td>
                            <td>{{ aList.description }}</td>
                            <td>{{ aList.owner }}</td>
                            <td>{{ aList.private }}</td>
                            <td>{{ aList.grp }}</td>
                            <td>{{ aList.edit }}</td>
                            <td>{{ aList.suggestion }}</td>
                            <td>{{ aList.vote }}</td>
                            <td>{{ aList.itemCnt }}</td>

                            <td>
                                <button type="submit" class="btn btn-primary btn-sm"
                                    ng-click="itemsOfList(aList.name)">Rank</button>
                            </td>
                            </tbody>
                            <p class="text-center" ng-show="loading">
                                <span class="fa fa-spinner fa-spin fa-3x"></span>
                            </p>
                    </table>
                </div>
            </div>
            </td>
            <td>
        </div>
        <span id="addListForm">

            <h3> Create a new List: </h3>
            <div class="alert alert-danger" id="listnametaken">List Name already taken!</div>

            <% if (message.length > 0) { %>
            <div class="alert alert-danger"><%= message %></div>
            <% } %>

            <form name="myForm">
                <div class="form-group">
                    <label>List Name</label>
                    <input type="text" class="form-control" name="name" ng-model="formData.name" required
                        placeholder="List Name" maxlength="32"
                        [ngClass]="{'invalid-textbox' :myForm.submitted && !name.valid }" data-toggle="tooltip"
                        title="Enter the List name. Must be unique." />
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <input type="text" class="form-control" name="description" ng-model="formData.description"
                        placeholder="Describe this List" required maxlength="128"
                        [ngClass]="{'invalid-textbox' :myForm.submitted && !description.valid }" data-toggle="tooltip"
                        title="Describe the List." />
                </div>
                <div class="form-group">
                    <label>Who can see this List</label>
                    <select class="form-control" name="grp" ng-model="formData.grp"
                    ng-options="grp for grp in myGrps"
                        placeholder="Select Group" required 
                        [ngClass]="{'invalid-textbox' :myForm.submitted && !grp.valid }" data-toggle="tooltip"
                        title="Enter the Group that can see this List." >
                    </select>
                    
                </div>
                <!-- button type="submit" class="btn btn-warning btn-lg">Add</button -->
                <button type="submit" class="btn btn-primary btn-lg" ng-click="createMyList()"
                    ng-disabled="!myForm.name.$dirty || !myForm.description.$dirty || !myForm.grp.$dirty || 
                     (myForm.name.$dirty && myForm.name.$invalid) || (myForm.description.$dirty && myForm.description.$invalid) 
                     || (myForm.grp.$dirty && myForm.grp.$invalid)" 
                     data-toggle="tooltip" title="Add this new List!">Add</button>

            </form>
        </span>
        </td>
        </tr>
        </table>

    <span ng-if="myItems.length == 0 && myItems2.length == 0">
        <h3><span class="fa "></span>{{ currentListName }}: Contains no Items. You must Add Items before you can Rank them.</h3>
    </span>

    <span ng-if="myItems.length > 0 || myItems2.length > 0">    
    <div ng-view id=myItemsTable>
        <div class="text-centerx">
            <h3><span class="fa "></span>{{ currentListName }} Items 
            <button type="submit" class="btn btn-primary btn-sm" ng-click="myCopyLink()">Copy Link to List</button></h3>
        </div>
        <div><p>Select up to 10 Items for Ranking - Rank them - Then save Your Ranking.</p></div>
            <div>
                <table ng-table="myItemsTableParams" border="1" cellspacing="0" cellpadding="4">
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Owner</th>
                        <th>List</th>
                        <th>Suggestion</th>
                        <th>Rank</th>
                        <th>Operations</th>
                    </tr>
                    <tbody class="problemcheckboxx" ng-repeat="aItem in myItems">

<td>{{ aItem.name }}</td>
<td>{{ aItem.description }}</td>
<td>{{ aItem.owner }}</td>
<td>{{ aItem.list }}</td>
<td>{{ aItem.suggestion }}</td>
<td>{{ aItem.rank }}</td>

<td>
    <span ng-if="10 > myItems2.length">
    <button type="submit" class="btn btn-primary btn-sm" ng-click="mySelectItem(aItem)">Rank</button>
    <span>
</td>
</tbody>
<p class="text-center" ng-show="loading">
    <span class="fa fa-spinner fa-spin fa-3x"></span>
</p>
</table>
</div>
</div>
</span>

<span ng-if="myItems2.length > 0 ">
<div ng-view id=myItemsTable2>
        <div class="text-centerx">
            <h3>{{ currentListName }} Items to Rank: <span class="labelx label-infox">{{ myItems2.length }}</span></h3>
        </div>
        <div><p>Set Your Rankings via Up and Down - Then save Your Rankings.</p></div>
            <div>
                <table ng-table="myItemsTable2Params" border="1" cellspacing="0" cellpadding="4">
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Rank</th>
                        <th>My Rank</th>
                        <th>Operations</th>
                    </tr>
                    <tbody class="tableWithItemsToOrder" id = "tableWithItemsToOrder" ng-repeat="aItem2 in myItems2">
<tr>
<td>{{ aItem2.name }}</td>
<td>{{ aItem2.description }}</td>
<td>{{ aItem2.rank }}</td>
<td>{{$index + 1}}</td>
<td>
    <button type="submit" class="btn btn-primary btn-sm" ng-click="myRemoveItem2(aItem2)">Don't Rank</button>
    <span ng-if="$index != 0 ">
    <button class="btn btn-success" ng-click="moveUp(aItem2, $index  );">Up</button>
    </span>
    <span ng-if="myItems2.length > ($index + 1) ">
    <button class="btn btn-success" ng-click="moveDown(aItem2, $index );">Down</button>
    </span>
</td>
</tr>
</tbody>
<p class="text-center" ng-show="loading">
    <span class="fa fa-spinner fa-spin fa-3x"></span>
</p>
</table>
</div>
</div>
</span>

<div>
<span ng-if="myItems2.length > 0 ">
    <p></p>
    <button class="btn btn-success" ng-click="saveMyRanking();">Save My Ranking</button>
</span>
</div>
</div>
</div>
</body>
</html>