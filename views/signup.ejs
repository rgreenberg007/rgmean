<!doctype html>
<html ng-app="scotchTodo" lang="en">
<head X-Content-Type-Options: nosniff>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js"></script><!-- load angular -->
    <!-- ??? Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <!-- ??? Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.8/angular-filter.min.js"></script>

    <meta charset="utf-8"> 
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="/" />

    <script>
    angular.module('userGrpsDetailsController', [])

	.controller('mainController', ['$scope','$http','userGrpsDetails', function($scope, $http, userGrpsDetails) {
		console.log("userGrpsDetails.ejs: userGrpsDetailsController mainController reached");
		$scope.formData = {};
        $scope.loading = true;
        $scope.myUserGrpsTableParams = {};
        $("#grpnametaken").hide();
        $("#passwordmismatch").hide();

        userGrpsDetails.get()
			.success(function(data) {
				console.log("userGrpsDetails.ejs: mainController userGrpsDetails.get success");
                $scope.userGrpsDetails = data;
                $scope.loading = false;
                $("#grpnametaken").hide();
            });
            
        $scope.checkPasswords = function() {
            console.log("signup.ejs: checkPasswords reached ");
            if ($scope.formData.password != $scope.formData.password2) {
                console.log("signup.ejs: checkPasswords dont match! ");
                $("#passwordmismatch").show();
                return false;
            } else {
                $("#passwordmismatch").hide();
                console.log("signup.ejs: checkPasswords  match! ");
                return false; // true;
            }
        }

        $scope.createUser = function() {
            console.log("signup.ejs: mainController createUser ");
            console.log("signup.ejs: $scope.formData: " + JSON.stringify($scope.formData) );
            if ($scope.formData.password != $scope.formData.password2) {
                $("#passwordmismatch").show();
            } else {
                $("#passwordmismatch").hide();
                userGrpsDetails.create($scope.formData)
                    .error(function(data) {
                        $scope.loading = false;
                        console.log("signup.ejs: createUser ERROR data: " + JSON.stringify(data) );
                    })
					.success(function(data) {
                        console.log("signup.ejs: createUser success");
                        //userGrpsDetails.get();
                    });
            }
        }

        $scope.createUserGrpDetail = function() {
            console.log("userGrpsDetails.ejs:  mainController createUserGrpDetail ");
			// validate the formData to make sure that something is there
			// if form is empty, nothing will happen
			if ($scope.formData.grp != undefined) {
				$scope.loading = true;
                //$scope.formData.email = userEmail; // emailx;
                //$scope.formData.grpOwner = 'Y';
                // call the create function from our service (returns a promise object)
                console.log("userGrpsDetails.ejs: $scope.formData: " + JSON.stringify($scope.formData) );
                //userGrps.create( {"grp":$scope.userGrpName, "grpOwner":"Y"} )
                userGrpsDetails.create($scope.formData)
                    .error(function(data) {
                        $scope.loading = false;
                        console.log("userGrpsDetails.ejs: createUserGrpDetail ERROR data: " + JSON.stringify(data) );
                        console.log("userGrpsDetails.ejs: createUserGrpDetail ERROR data.message: " + data.message );
                        message = data.message;
                        $("#grpnametaken").show();

                    })
					.success(function(data) {
						$scope.loading = false;
                        $scope.formData = {}; // clear the form so our user is ready to enter another
                        //console.log("userGrpsDetails.ejs: createUserGrpDetail $scope.userGrpsDetails: " + JSON.stringify($scope.userGrpsDetails) );
                        $scope.userGrpsDetails = data; // 
                        $("#grpnametaken").hide();
                        console.log("userGrpsDetails.ejs: createUserGrpDetail $scope.userGrpsDetails: " + JSON.stringify($scope.userGrpsDetails) );
                });
			}
        };

        $scope.deleteGrpDetail = function(grpName) {
            console.log("userGrpsDetails.ejs:  mainController deleteGrpDetail grpName: " + grpName);
            $scope.loading = true;
            userGrpsDetails.delGrpDetail(grpName)
				.success(function(data) {
					$scope.loading = false;
					$scope.formData = {}; // clear the form so our user is ready to enter another
                    $scope.userGrpsDetails = data; // 
                    $("#grpnametaken").hide();
            });
        };
	}]);
</script>

<script>
angular.module('userGrpsDetailsService', [])

.factory('userGrpsDetails', ['$http',function($http) {
    return {
        get : function() {
            console.log("signup.ejs: service  get after successful create ");
            return $http.get('/appPage1');
        },
        create : function(Data) {
            console.log("signup.ejs: service userGrpsDetails create");
            return $http.post('/signup', Data);
            //return $http.post('/api/signup', Data);
            //return $http.get('/api/users/' + Data.grp);
        },
        delete : function(id) {
            console.log("userGrpsDetails.ejs: service userGrps delete");
            return $http.delete('/api/userGrps/' + id);
        } ,
        change : function(id) {
            console.log("userGrpsDetails.ejs: service userGrps change");
            //return $http.get('/api/users/grp=' + id);
            return $http.get('/api/users/' + id); // id is a grp name
        },
        test1 : function(id) {
            console.log("userGrpsDetails.ejs: service userGrps test1");
            //return $http.get('/api/users/grp=' + id);
            return $http.get('/api/users/test1/' + id); // id is a grp name
        },
        test2 : function(id) {
            console.log("userGrpsDetails.ejs: service userGrps test2");
            //return $http.get('/api/users/grp=' + id);
            return $http.get('/api/users/test2/' + id); // id is a grp name
        },
        deleteUserFromGrp : function(Data) {
            return $http.post('/api/userGrpsDelUser', Data);
        },
        detOfGrp  : function(id) {
            console.log("userGrpsDetails.ejs:  detOfGrp");
            //return $http.get('/api/users/grp=' + id);
            return $http.get('/api/userGrps/detOfGrp/' + id); // id is a grp name
        },
        ownersOfGrp : function(id) {
            console.log("userGrpsDetails.ejs:  ownersOfGrp");
            //return $http.get('/api/users/grp=' + id);
            return $http.get('/api/userGrps/ownersOfGrp/' + id); // id is a grp name
        },
        delGrp : function(id) {
            console.log("userGrpsDetails.ejs:  delGrp");
            return $http.get('/api/userGrps/deleteGrp/' + id); // id is a grp name
        },
        delGrpDetail : function(id) {
            console.log("userGrpsDetails.ejs:  delGrpDetail");
            return $http.get('/api/userGrps/deleteGrpDetail/' + id); // id is a grp name
        }
    }
}]);
</script>

<script>
angular.module('scotchTodo', ['userGrpsDetailsController', 'userGrpsDetailsService', 'angular.filter']);
</script>

<script>
function checkPasswords() {
    console.log("signup.ejs: checkPasswords reached ");
    //console.log("passsword:: " + $scope.formData.password + " 2: " + $scope.formData.password2);
    console.log("passsword:: " + document.forms["myForm"]["password"].value );
    console.log("passsword2:: " + document.forms["myForm"]["password2"].value );
    //return false;
    //if ($scope.formData.password != $scope.formData.password2) {
    if (document.forms["myForm"]["password"].value != document.forms["myForm"]["password2"].value) {
        console.log("signup.ejs: checkPasswords dont match! ");
        $("#passwordmismatch").show();
        return false;
    } else {
        $("#passwordmismatch").hide();
        console.log("signup.ejs: checkPasswords  match! ");
        return true;
    }
}
</script>

    <title>Top 10 Lists</title>
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" / -->
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" / -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        body {
            padding-top: 0px;
            word-wrap: break-word;
        }
    </style>
</head>
<body class="bg-secondary text-white">
    <div id='mainx' class="container-fluid">
        <% include myNavBar %>     
        <div ng-viewx>
            <div ng-controller="mainController">
                <div class="container">
                    <div class="col-sm-6 col-sm-offset-3">
                        <h1><span class="fa"></span>Register</h1>
                        <div class="alert alert-danger" id="passwordmismatch">Passwords do not match!</div>
                        <% if (message.length > 0) { %>
                            <div class="alert alert-danger"><%= message %></div>
                        <% } %>
                        <form name="myForm" action="/signup" onsubmit="return checkPasswords()" method="post">
                            <div class="form-group">
                                <label class="py-sm-0 my-sm-0">Email</label> 
                                <!-- note need to use type="email" then browser checks for valid email entered -->
                                 <input type="email" class="form-control form-control-sm" name="email" placeholder="enter email" 
                                ng-model="formData.email" maxlength="64"
                                required  minlength="5" [pattern]="emailRegex" 
                                [ngClass]="{'invalid-textbox' :signUpFrm.submitted && !email.valid }"
                                data-toggle="tooltip" title="Enter an Email address. This will be your login Username">                                
                            </div>
                            <div class="form-group">
                                    <label class="py-sm-0 my-sm-0">Password</label>
                                    <input type="password" class="form-control form-control-sm" maxlength="32" name="password" 
                                    ng-model="formData.password"
                                    required minlength="3" [ngClass]="{'invalid-textbox' :signUpFrm.submitted && !password.valid }"
                                    data-toggle="tooltip" title="Enter the Password used for logging in">
                            </div>
                            <div class="form-group">
                                    <label class="py-sm-0 my-sm-0">Confirm Password</label>
                                    <input type="password" class="form-control form-control-sm" maxlength="32" name="password2" 
                                    ng-model="formData.password2"
                                    required minlength="3" [ngClass]="{'invalid-textbox' :signUpFrm.submitted && !password2.valid }"
                                    data-toggle="tooltip" title="Enter the Password used for logging in">
                            </div>
                            <div class="form-group">
                                    <label class="py-sm-0 my-sm-0">Screen Name</label>
                                    <input type="text" class="form-control form-control-sm" maxlength="32" name="screenName" placeholder="Screen Name" 
                                    ng-model="formData.screenName"
                                    required  [ngClass]="{'invalid-textbox' :signUpFrm.submitted && !screenName.valid }"
                                    data-toggle="tooltip" title="This will be displayed when you are logged in">
                            </div>
                            <div class="form-group">
                                <label class="py-sm-0 my-sm-0">*Private Y/N</label>
                                <select type="text" class="form-control form-control-sm" name="private" 
                                    ng-model="formData.private" required placeholder="Y"
                                    data-toggle="tooltip" 
                                    title="Make yourself Private to prevent others from putting you in Groups">
                                <option value="Y" selected>Y</option>
                                <option value="N" >N</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-warning btn-sm"  
                            ng-disabled="!myForm.email.$dirty
                            || !myForm.password.$dirty || !myForm.password2.$dirty
                            || !myForm.screenName.$dirty || !myForm.private.$dirty ||
                            (myForm.email.$dirty && myForm.email.$invalid) || (myForm.password.$dirty && myForm.password.$invalid) ||
                            (myForm.password2.$dirty && myForm.password2.$invalid) ||
                            (myForm.screenName.$dirty && myForm.screenName.$invalid)"
                            data-toggle="tooltip" 
                            title="Select to Register as a new User"
                            >Signup</button>
                        </form>   
                        <hr />
                        <p class="py-sm-0 my-sm-0">Already have an account? <a href="/login">Login</a></p>
                        <p class="py-sm-0 my-sm-0">Or go <a href="/">Home</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
