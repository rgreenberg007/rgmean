<!doctype html>
<html ng-app="scotchTodo" lang="en">

<head X-Content-Type-Options: nosniff>
    <!-- SPELLS -->
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js"></script><!-- load angular -->
    <!-- ??? Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <!-- ??? Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.8/angular-filter.min.js"></script>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="/" />

    <script>
        $(document).ready(function () {
            $("#mybutton").click(function () {
                $("#myp").toggle();
            });
        });
    </script>

    <script>
        angular.module('userGrpsController', [])

            // inject the Todo service factory into our controller
            .controller('mainController', ['$scope', '$http', 'userGrps', function ($scope, $http, userGrps) {
                console.log("meInGrps.ejs: userGrpsController mainController reached");
                $scope.formData = {};
                $scope.loading = true;
                $scope.myUserGrpsTableParams = {};
                var userEmail = "<%= user.local.email %>";
                console.log("meInGrps.ejs: userEmail: ", userEmail);

                $("#myUserList").hide();
                $("#myUserList2").hide();
                $("#myUserList3").hide();

                // GET =====================================================================
                userGrps.getPubGrpsOut()
                    .success(function (data) {
                        console.log("meInGrps.ejs: mainController userGrps.getPubGrpsOut success");
                        $scope.userGrpsOut = data;
                        $scope.loading = false;
                    });

                userGrps.getPubGrpsIn()
                    .success(function (data) {
                        console.log("meInGrps.ejs: mainController userGrps.getPubGrpsIn success");
                        $scope.userGrpsIn = data;
                        $scope.loading = false;
                    });


                // CREATE ==================================================================
                $scope.createUserGrp = function (emailx) {
                    console.log("userGrpsA.ejs:  mainController createUserGrp ");
                    //console.log("emailx: " , emailx);
                    // validate the formData to make sure that something is there
                    // if form is empty, nothing will happen
                    if ($scope.formData.grp != undefined) {
                        $scope.loading = true;
                        $scope.formData.email = userEmail; // emailx;
                        $scope.formData.grpOwner = 'Y';
                        // call the create function from our service (returns a promise object)
                        console.log("userGrpsA.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                        //userGrps.create( {"grp":$scope.userGrpName, "grpOwner":"Y"} )
                        userGrps.create($scope.formData)
                            // if successful creation, call our get function to get all the new todos
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.userGrps = data; // 
                                console.log("userGrpsA.ejs: createUserGrp $scope.userGrps: " + JSON.stringify($scope.userGrps));
                                $("#myUserList").hide();
                                $("#myUserList2").hide();
                                $("#myUserList3").hide();
                            });
                    }
                };

                $scope.createUserGrp2 = function (emailx) {
                    console.log("userGrpsA.ejs:  mainController createUserGrp2 ");
                    console.log("userGrpsA.ejs: emailx: ", emailx);
                    // validate the formData to make sure that something is there
                    // if form is empty, nothing will happen
                    //if ($scope.formData.grp != undefined) {
                    $scope.loading = true;
                    // call the create function from our service (returns a promise object)
                    console.log("userGrpsA.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                    //userGrps.create( {"grp":$scope.userGrpName, "email":$scope.local.email, "grpOwner":"N"} )
                    $scope.formData.grp = $scope.userGrpName;
                    $scope.formData.email = emailx;
                    $scope.formData.grpOwner = 'N';
                    console.log("userGrpsA.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                    userGrps.create($scope.formData)
                        // if successful creation, call our get function to get all the new todos
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.userGrps = data; // 
                            console.log("userGrpsA.ejs: createUserGrp2 $scope.userGrps: " + JSON.stringify($scope.userGrps));
                            $scope.loading = true;
                            //$scope.userGrpName = $scope.userGrpName;
                            userGrps.test1($scope.userGrpName)
                                .success(function (data) {
                                    $scope.loading = false;
                                    $scope.users = data;
                                    console.log("userGrpsA.ejs: createUserGrp2 test1 $scope.users: " + JSON.stringify($scope.users));
                                });
                        });
                    //}
                };

                $scope.createUserGrp3 = function (emailx) {
                    console.log("userGrpsA.ejs:  mainController createUserGrp3 ");
                    console.log("userGrpsA.ejs: emailx: ", emailx);
                    // validate the formData to make sure that something is there
                    // if form is empty, nothing will happen
                    //if ($scope.formData.grp != undefined) {
                    $scope.loading = true;
                    console.log("userGrpsA.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                    $scope.formData.grp = $scope.userGrpName;
                    $scope.formData.email = emailx;
                    $scope.formData.grpOwner = 'N';
                    console.log("userGrpsA.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                    userGrps.create($scope.formData)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.userGrps = data; // 
                            console.log("userGrpsA.ejs: createUserGrp3 $scope.userGrps: " + JSON.stringify($scope.userGrps));
                            $scope.loading = true;
                            userGrps.test2($scope.userGrpName)
                                .success(function (data) {
                                    $scope.loading = false;
                                    $scope.users = data;
                                    console.log("userGrpsA.ejs: createUserGrp3 test2 $scope.users: " + JSON.stringify($scope.users));

                                    userGrps.test1($scope.userGrpName)
                                        .success(function (data) {
                                            $scope.loading = false;
                                            $scope.users2 = data;
                                            console.log("userGrpsA.ejs: test1UserGrp $scope.users2: " + JSON.stringify($scope.users2));
                                        });
                                });
                        });
                    //}
                };

                $scope.deleteGrp = function (grpName) {
                    console.log("userGrpsA.ejs:  mainController deleteGrp grpName: " + grpName);
                    $scope.loading = true;
                    userGrps.delGrp(grpName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.userGrps = data; // 
                            $("#myUserList").hide();
                            $("#myUserList2").hide();
                            $("#myUserList3").hide();
                        });
                };

                $scope.removeUsrFromGrp = function (grpx) {
                    console.log("meInGrps.ejs:  mainController removeUsrFromGrp ");
                    console.log("meInGrps.ejs: grpx: ", grpx, " userEmail: ", userEmail);
                    $scope.loading = true;

                    $scope.info = { "email": userEmail, "grp": grpx };
                    userGrps.deleteUsrFromGrp($scope.info)
                        .success(function (data) {
                            //$scope.loading = false;
                            $scope.userGrps = data; // 

                            userGrps.getPubGrpsOut()
                                .success(function (data) {
                                    console.log("meInGrps.ejs: mainController userGrps.getPubGrpsOut success");
                                    $scope.userGrpsOut = data;
                                    //$scope.loading = false;
                                });

                            userGrps.getPubGrpsIn()
                                .success(function (data) {
                                    console.log("meInGrps.ejs: mainController userGrps.getPubGrpsIn success");
                                    $scope.userGrpsIn = data;
                                    $scope.loading = false;
                                });
                        });
                };

                $scope.addUsrToGrp = function (grpx) {
                    console.log("meInGrps.ejs:  mainController addUsrToGrp ");
                    console.log("meInGrps.ejs: grpx: ", grpx, " userEmail: ", userEmail);
                    $scope.loading = true;

                    $scope.info = { "email": userEmail, "grp": grpx, "grpOwner": "N" };
                    userGrps.createUsrInGrp($scope.info)
                        .success(function (data) {
                            //$scope.loading = false;
                            $scope.userGrps = data; // 

                            userGrps.getPubGrpsOut()
                                .success(function (data) {
                                    console.log("meInGrps.ejs: mainController userGrps.getPubGrpsOut success");
                                    $scope.userGrpsOut = data;
                                    //$scope.loading = false;
                                });

                            userGrps.getPubGrpsIn()
                                .success(function (data) {
                                    console.log("meInGrps.ejs: mainController userGrps.getPubGrpsIn success");
                                    $scope.userGrpsIn = data;
                                    $scope.loading = false;
                                });
                        });
                };

                $scope.removeUserFromGrp = function (emailx) {
                    console.log("userGrpsA.ejs:  mainController removeUserFromGrp ");
                    console.log("userGrpsA.ejs: emailx: ", emailx);
                    // validate the formData to make sure that something is there
                    // if form is empty, nothing will happen
                    //if ($scope.formData.grp != undefined) {
                    $scope.loading = true;
                    console.log("userGrpsA.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                    $scope.formData.grp = $scope.userGrpName;
                    $scope.formData.email = emailx;
                    $scope.formData.grpOwner = 'N';
                    console.log("userGrpsA.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                    userGrps.deleteUserFromGrp($scope.formData)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.userGrps = data; // 
                            console.log("userGrpsA.ejs: deleteUserFromGrp $scope.userGrps: " + JSON.stringify($scope.userGrps));
                            $scope.loading = true;
                            userGrps.test2($scope.userGrpName)
                                .success(function (data) {
                                    $scope.loading = false;
                                    $scope.users = data;
                                    console.log("userGrpsA.ejs: deleteUserFromGrp test2 $scope.users: " + JSON.stringify($scope.users));

                                    userGrps.test1($scope.userGrpName)
                                        .success(function (data) {
                                            $scope.loading = false;
                                            $scope.users2 = data;
                                            console.log("userGrpsA.ejs: test1UserGrp $scope.users2: " + JSON.stringify($scope.users2));
                                        });
                                });
                        });
                    //}
                };

                // DELETE ==================================================================
                $scope.deleteUserGrp = function (id) {
                    $scope.loading = true;
                    userGrps.delete(id)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.userGrps = data;
                            // update the user's in the group like change
                            userGrps.test1($scope.userGrpName)
                                .success(function (data) {
                                    $scope.loading = false;
                                    $scope.users = data;
                                    console.log("userGrpsA.ejs: deleteUserGrp test1 $scope.users: " + JSON.stringify($scope.users));
                                });
                        });
                };
                $scope.changeUserGrp = function (id) {
                    $scope.loading = true;
                    $scope.userGrpName = id;
                    userGrps.change(id)
                        .success(function (data) {
                            $scope.loading = false;
                            //$scope.userGrps = data; 
                            $scope.users = data;
                            console.log("userGrpsA.ejs: changeUserGrp $scope.users: " + JSON.stringify($scope.users));
                        });
                };
                $scope.test1UserGrp = function (id) {
                    $scope.loading = true;
                    $scope.userGrpName = id;
                    userGrps.test1(id)
                        .success(function (data) {
                            $scope.loading = false;
                            //$scope.userGrps = data; 
                            $scope.users = data;
                            console.log("userGrpsA.ejs: test1UserGrp $scope.users: " + JSON.stringify($scope.users));
                            $("#myUserList").show();
                        });
                };
                $scope.test2UserGrp = function (id) {
                    $scope.loading = true;
                    $scope.userGrpName = id.grp;
                    //$scope.currentGrpOwner = id.grpOwner;
                    console.log("userGrpsA.ejs: test2UserGrp id: " + JSON.stringify(id));
                    $("#myUserList3").hide();

                    userGrps.ownersOfGrp(id.grp)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.userGrps3 = data;
                            console.log("userGrpsA.ejs: test2UserGrp $scope.userGrps3: " + JSON.stringify($scope.userGrps3));
                        });
                    userGrps.test2(id.grp)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.users = data;
                            console.log("userGrpsA.ejs: test2UserGrp $scope.users: " + JSON.stringify($scope.users));
                            $("#myUserList").show();

                            userGrps.test1(id.grp)
                                .success(function (data) {
                                    $scope.loading = false;
                                    $scope.users2 = data;
                                    console.log("userGrpsA.ejs: test2UserGrp $scope.users2: " + JSON.stringify($scope.users2));
                                    $("#myUserList2").show();
                                });
                        });
                };

                $scope.detailsOfGrp = function (id) {
                    console.log("userGrpsA.ejs: detailsOfGrp id: " + id);
                    //$scope.loading = true;
                    $scope.userGrpName = id;
                    $("#myUserList").hide();
                    $("#myUserList2").hide();

                    userGrps.detOfGrp(id)
                        .success(function (data) {
                            $scope.loading = false;
                            //$scope.userGrps2 = data; 
                            $("#myUserList3").show();
                            //console.log("userGrpsA.ejs: deleteUserGrp detOfGrp $scope.users: " + JSON.stringify($scope.userGrps2) );
                            $scope.grpDetail = data[data.length - 2];
                            $scope.grpPrivate = data[data.length - 1];
                            data.pop();
                            data.pop();
                            $scope.userGrps2 = data;
                            //console.log("userGrpsA.ejs: " + JSON.stringify($scope.grpDetail) + " " + JSON.stringify($scope.grpPrivate));
                            //console.log("userGrpsA.ejs: deleteUserGrp detOfGrp $scope.users: " + JSON.stringify($scope.userGrps2) );
                        });
                };
            }]);
    </script>

    <script>
        angular.module('userGrpsService', [])

            .factory('userGrps', ['$http', function ($http) {
                return {
                    get: function () {
                        console.log("userGrpsA.ejs: service userGrps get");
                        return $http.get('/api/userGrpsA');
                    },
                    getPubGrps: function () {
                        console.log("meInGrpsejs: service userGrps getPubGrps");
                        return $http.get('/api/getPubGrps');
                    },
                    getPubGrpsOut: function () {
                        console.log("meInGrpsejs: service userGrps getPubGrpsOut");
                        return $http.get('/api/getPubGrpsOut');
                    },
                    getPubGrpsIn: function () {
                        console.log("meInGrpsejs: service userGrps getPubGrpsIn");
                        return $http.get('/api/getPubGrpsIn');
                    },
                    create: function (Data) {
                        //Data.email = "<%= user.local.email %>";
                        //Data.grpOwner = "Y";
                        return $http.post('/api/userGrps', Data);
                        //return $http.get('/api/users/' + Data.grp);
                    },
                    createUsrInGrp: function (Data) {
                        return $http.post('/api/createUserInGrp', Data);
                    },
                    delete: function (id) {
                        console.log("userGrpsA.ejs: service userGrps delete");
                        return $http.delete('/api/userGrps/' + id);
                    },
                    deleteUsrFromGrp: function (Data) {
                        console.log("meInGrps.ejs: service userGrps deleteUsrFromGrp");
                        //return $http.delete('/api/removeUserFromGrp/' + info );
                        return $http.post('/api/removeUserFromGrp', Data);
                    },
                    change: function (id) {
                        console.log("userGrpsA.ejs: service userGrps change");
                        //return $http.get('/api/users/grp=' + id);
                        return $http.get('/api/users/' + id); // id is a grp name
                    },
                    test1: function (id) {
                        console.log("userGrpsA.ejs: service userGrps test1");
                        //return $http.get('/api/users/grp=' + id);
                        return $http.get('/api/users/test1/' + id); // id is a grp name
                    },
                    test2: function (id) {
                        console.log("userGrpsA.ejs: service userGrps test2");
                        //return $http.get('/api/users/grp=' + id);
                        return $http.get('/api/users/test2/' + id); // id is a grp name
                    },
                    deleteUserFromGrp: function (Data) {
                        return $http.post('/api/userGrpsDelUser', Data);
                    },
                    detOfGrp: function (id) {
                        console.log("userGrpsA.ejs:  detOfGrp");
                        //return $http.get('/api/users/grp=' + id);
                        return $http.get('/api/userGrps/detOfGrp/' + id); // id is a grp name
                    },
                    ownersOfGrp: function (id) {
                        console.log("userGrpsA.ejs:  ownersOfGrp");
                        //return $http.get('/api/users/grp=' + id);
                        return $http.get('/api/userGrps/ownersOfGrp/' + id); // id is a grp name
                    },
                    delGrp: function (id) {
                        console.log("userGrpsA.ejs:  delGrp");
                        return $http.get('/api/userGrps/deleteGrp/' + id); // id is a grp name
                    }
                }
            }]);
    </script>

    <script>
        angular.module('scotchTodo', ['userGrpsController', 'userGrpsService', 'angular.filter']);
    </script>
    <title>Lists </title>    
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" / -->
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" / -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        body {
            padding-top: 0px;
            word-wrap: break-word;
        }
    </style>
</head>
<body class="bg-secondary text-white">
    <div id='mainx' class="container-fluid">
        <% include myNavBar %>
        <div ng-viewx>
            <h3><span class="fa fa-sign-in"></span> RG's List App - Manage Groups I'm In </h3>
            <div ng-controller="mainController">
                <div class="containerx">
                    <p> Groups you are in:</p>
                    <table>
                        <tr>
                            <td>
                                <!-- div class="jumbotron text-center" -->
                                <!-- div class="text-centerx">
                        <h2>Number of User Groups: <span class="labelx label-infox">{{ userGrps.length }}</span></h2>
                    </div -->
                                <!-- div id="userGrps-list" class="problemrow" -->
                                <div id="userGrps-listx">
                                    <!-- div class="col-sm-4 col-sm-offset-4" -->
                                    <div>
                                        <table ng-table="myUserGrpsTableParams" border="1" cellspacing="0"
                                            cellpadding="4">
                                            <tr>
                                                <th>Operations</th>
                                                <th>Group</th>
                                                <th>Details</th>
                                            </tr>
                                            <tbody class="problemcheckboxx"
                                                ng-repeat="userGrp in userGrpsIn | unique: 'grp'">
                            <td>
                                <button type="submit" class="btn btn-primary btn-sm"
                                    ng-click="removeUsrFromGrp(userGrp.grp)">Remove</button>
                            </td>
                            <td>{{ userGrp.grp }}</td>
                            <td>{{ userGrp.detail }}</td>
                            </tbody>
                            <p class="text-center" ng-show="loading">
                                <span class="fa fa-spinner fa-spin fa-3x"></span>
                            </p>
                    </table>
                </div>
            </div>
            </td>
            <td>
                <div id="userGrps-listxx">
                    <div>
                        <p> Groups you can join:</p>
                        <table ng-table="myUserGrpsTableParams" border="1" cellspacing="0" cellpadding="4">
                            <tr>
                                <th>Operations</th>
                                <th>Group</th>
                                <th>Details</th>
                            </tr>
                            <tbody class="problemcheckboxx" ng-repeat="userGrp in userGrpsOut | unique: 'grp'">
            <td>
                <button type="submit" class="btn btn-primary btn-sm" ng-click="addUsrToGrp(userGrp.grp)">Add</button>
            </td>
            <td>{{ userGrp.grp }}</td>
            <td>{{ userGrp.detail }}</td>
            </tbody>
            <p class="text-center" ng-show="loading">
                <span class="fa fa-spinner fa-spin fa-3x"></span>
            </p>
            </table>
        </div>
    </div>
    </td>
    <td>
        <div ng-viewyvx id=myUserList3>
            <div class="text-centerx">
                <!-- % if (grpPrivate == "Y") { % -->
                <span ng-if="grpPrivate == 'Y' ">
                    <p>Group: <span class="labelx label-infox">{{ userGrps2[0].grp }} - {{ grpDetail }} (Private)</span>
                    </p>
                </span>
                <span ng-if="grpPrivate == 'N' ">
                    <p>Group: <span class="labelx label-infox">{{ userGrps2[0].grp }} - {{ grpDetail }} (Public)</span>
                    </p>
                </span>
                <!-- % } else { % -->
                <!-- p>Group: <span class="labelx label-infox">{{ userGrps2[0].grp }} - {{ grpDetail }} (Public)</span></p -->
                <!-- % } % -->
                <!-- p>Group Name: <span class="labelx label-infox">{{ userGrps2[0].grp }} </span></p -->
                <!-- p>Group Detail: <span class="labelx label-infox">{{ grpDetail }}</span></p -->
                <!-- p>Group Private: <span class="labelx label-infox">{{ grpPrivate }}</span></p -->
                <p>Number of Users in Group: <span class="labelx label-infox">{{ userGrps2.length }}</span></p>
            </div>
            <div id="userGrps-listx">
                <!-- div class="col-sm-4 col-sm-offset-4" -->
                <div>
                    <table ng-table="myUserGrpsTableParams" border="1" cellspacing="0" cellpadding="4">
                        <tr>
                            <!-- th>Operations</th -->
                            <th>Group</th>
                            <th>Email</th>
                            <th>Group Owner</th>
                            <!-- th>Details</th -->
                        </tr>
                        <tbody class="problemcheckboxx" ng-repeat="userGrp in userGrps2">
                            <!-- td -->
                            <!-- span ng-if="userGrp.grpOwner == 'Y' ">
                                            <p>Yes</p>
                                        </span -->
                            <!-- span ng-if="userGrp.grpOwner == 'N' ">
                                                <button type="submit" class="btn btn-primary btn-sm" ng-click="deleteUserGrp(userGrp._id)">Del</button>
                                            </span -->
                            <!-- button type="submit" class="btn btn-primary btn-sm" ng-click="test1UserGrp(userGrp.grp)">Chg</button -->
                            <!-- /td -->
    <td>{{ userGrp.grp }}</td>
    <td>{{ userGrp.email }}</td>
    <td>{{ userGrp.grpOwner }}</td>
    <!-- td>
                                            <button type="submit" class="btn btn-primary btn-sm" ng-click="detailsToDoGrp(toDoGrp._id)">Details</button>
                                        </td -->
    </tbody>
    <p class="text-center" ng-show="loading">
        <span class="fa fa-spinner fa-spin fa-3x"></span>
    </p>
    </table>
    </div>
    </div>
    </td>
    <td>
        </div>

        <div ng-viewyv id=myUserList>
            <div>
                <!-- /div>ng-controller="mainControllery" -->
                <div class="containerx">
                    <div id="users-list" class="problemrowx">
                        <!-- div class="col-sm-4 col-sm-offset-4" -->
                        <div>
                            <table border="1" cellspacing="0" cellpadding="4">
                                <tr>
                                    <td colspan=4>
                                        <div class="text-centerx">
                                            <h2>Users in Group: <span class="labelx label-infox">{{ userGrpName }}
                                                </span></h2>
                                        </div>

                                        <span ng-if="users.length == 0 ">
                                            <p> All Users (allowed) are already in this group!</p>
                                        </span>
                                        <span ng-if="users.length == 1 ">
                                            <button type="submit" class="btn btn-primary btn-sm"
                                                ng-click="deleteGrp(userGrpName)">Delete Group</button>
                                        </span>

                                    </td>
                                </tr>
                                <span ng-if="users.length > 0">
                                    <tr>
                                        <th>Operations</th>
                                        <th>Screen Name</th>
                                        <th>Email</th>
                                    </tr>
                                </span>
                                <tbody class="problemcheckboxx" ng-repeat="user in users">
    <td>
        <span ng-if="userGrps3[0].email !=  user.local.email">
            <button type="submit" class="btn btn-primary btn-sm"
                ng-click="removeUserFromGrp(user.local.email)">Remove</button>
        </span>
    </td>
    <td>{{ user.local.screenName }}</td>
    <td>{{ user.local.email }}</td>
    </tbody>
    <p class="text-center" ng-show="loading">
        <span class="fa fa-spinner fa-spin fa-3x"></span>
    </p>
    </table>
    </div>
    </div>
    </div>
    </div>
    </div>

    <div ng-viewyv id=myUserList2>
        <div>
            <!-- /div>ng-controller="mainControllery" -->
            <div class="containerx">
                <div id="users-list" class="problemrowx">
                    <!-- div class="col-sm-4 col-sm-offset-4" -->
                    <div>
                        <table border="1" cellspacing="0" cellpadding="4">
                            <tr>
                                <td colspan=4>
                                    <div class="text-centerx">
                                        <h2>Add Users into Group: <span
                                                class="labelx label-infox">{{ userGrpName }}</span></h2>
                                    </div>

                                    <span ng-if="users2.length == 0 ">
                                        <p> All Users (allowed) are already in this group!</p>
                                    </span>

                                </td>
                            </tr>
                            <span ng-if="users2.length > 0">
                                <tr>
                                    <th>Operations</th>
                                    <th>Screen Name</th>
                                    <th>Email</th>
                                </tr>
                            </span>
                            <tbody class="problemcheckboxx" ng-repeat="user in users2">
                                <td>
                                    <button type="submit" class="btn btn-primary btn-sm"
                                        ng-click="createUserGrp3(user.local.email)">Add</button>
                                </td>
                                <td>{{ user.local.screenName }}</td>
                                <td>{{ user.local.email }}</td>
                            </tbody>
                            <p class="text-center" ng-show="loading">
                                <span class="fa fa-spinner fa-spin fa-3x"></span>
                            </p>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    </td>
    </tr>
    </table>
    </div>
    </div>
    </div>
    </div>
</body>
</html>