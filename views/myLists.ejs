<!doctype html>
<html ng-app="scotchTodo" lang="en">

<head X-Content-Type-Options: nosniff>
    <!-- SPELLS -->
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js"></script><!-- load angular -->
    <!-- ??? Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <!-- ??? Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.8/angular-filter.min.js"></script>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="/" />

    <script>
        angular.module('myListsController', [])

            .controller('mainController', ['$scope', '$http', 'myLists', function ($scope, $http, myLists) {
                console.log("myPublicLists.ejs: myListsController mainController reached");
                $scope.formData = {};
                $scope.loading = true;
                $scope.myListsTableParams = {};
                var userEmail = "<%= user.local.email %>";
                $("#listnametaken").hide();
                $("#itemnametaken").hide();
                $("#myItemsTable").hide();
                $("#addItemForm").hide();

                // GET =====================================================================
                myLists.get(userEmail)
                    .success(function (data) {
                        console.log("myPublicLists.ejs: mainController myLists.get success");
                        $scope.myLists = data;
                        $scope.loading = false;
                        $("#listnametaken").hide();
                        $("#itemnametaken").hide();
                        $("#myItemsTable").hide();
                        $("#addItemForm").hide();
                    });

                // CREATE ==================================================================
                $scope.createMyList = function () {
                    console.log("myPublicLists.ejs:  mainController createMyList ");
                    if ($scope.formData.name != undefined) {
                        $scope.loading = true;
                        $scope.formData.owner = userEmail;
                        console.log("myPublicLists.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                        myLists.create($scope.formData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myPublicLists.ejs: createMyList ERROR data: " + JSON.stringify(data));
                                console.log("myPublicLists.ejs: createMyList ERROR data.message: " + data.message);
                                message = data.message;
                                $("#listnametaken").show();

                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                console.log("myPublicLists.ejs: createMyList $scope.myLists: " + JSON.stringify($scope.myLists));
                            });
                    }
                };

                $scope.deleteMyList = function (listName) {
                    console.log("myPublicLists.ejs:  mainController deleteMyList listName: " + listName);
                    //$scope.loading = true;

                    if (confirm('Are you sure you want to delete this record ?') == true) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.delMyList(listName)
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                $("#itemnametaken").hide();
                                $("#myItemsTable").hide();
                                $("#addItemForm").hide();
                            });
                    } else {
                        console.log(" No delete");
                    }
                };

                $scope.itemsOfList = function (listName) {
                    console.log("myLists.ejs:  mainController itemsOfList listName: " + listName);
                    $("#addListForm").hide();
                    $scope.currentListName = listName;
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            $("#itemnametaken").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                        });
                };

                $scope.createMyItem = function () {
                    console.log("myLists.ejs:  mainController createMyItem ");
                    if ($scope.formItemData.name != undefined) {
                        $scope.loading = true;
                        $scope.formItemData.list = $scope.currentListName;
                        $scope.formItemData.owner = userEmail;
                        console.log("myLists.ejs: $scope.formItemData: " + JSON.stringify($scope.formItemData));
                        myLists.createItem($scope.formItemData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: createMyItem ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: createMyItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                $("#itemnametaken").show();
                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formItemData = {}; // clear the form so our user is ready to enter another
                                $scope.myItems = data; // 
                                $("#itemnametaken").hide();
                                console.log("myLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                            });
                    }
                };

            }]);
    </script>

    <script>
        angular.module('myListsService', [])

            .factory('myLists', ['$http', function ($http) {
                return {
                    get: function (owner) {
                        console.log("myPublicLists.ejs: service myLists get");
                        //return $http.get('/api/myLists');
                        return $http.get('/api/myListsOwner/' + owner);
                    },
                    create: function (Data) {
                        console.log("myPublicLists.ejs: service myLists create");
                        return $http.post('/api/myLists', Data);
                    },
                    delete: function (id) {
                        console.log("myPublicLists.ejs: service myLists delete");
                        return $http.delete('/api/myLists/' + id);
                    },
                    change: function (id) {
                        console.log("myPublicLists.ejs: service myLists change");
                        return $http.get('/api/myLists/' + id);
                    },
                    getItems: function (listName) {
                        console.log("myLists.ejs: service myLists getItems");
                        return $http.get('/api/myItems/' + listName);
                    },
                    createItem: function (Data) {
                        console.log("myLists.ejs: service myLists createItem");
                        return $http.post('/api/myItems', Data);
                    }
                }
            }]);
    </script>

    <script>
        angular.module('scotchTodo', ['myListsController', 'myListsService', 'angular.filter']);
    </script>
    <title>Lists </title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" />
    <style>
        body {
            padding-top: 0px;
            word-wrap: break-word;
        }
    </style>
</head>

<body class="bg-secondary text-white">
    <div id='mainx' class="container-fluid">
        <% include myNavBar %>
        <div ng-viewx>
            <h3><span class="fa fa-sign-in"></span> RG's List App - My Lists - Under Development</h3>
            <div ng-controller="mainController">
                <div class="container">
                    <table>
                        <tr>
                            <td>
                                <div ng-viewyvx id=myUserList3x>
                                    <div class="text-centerx">
                                        <h3>Number of Lists: <span
                                                class="labelx label-infox">({{ myLists.length }})</span>
                                        </h3>
                                    </div>
                                    <div id="myLists-listx">
                                        <!-- div class="col-sm-4 col-sm-offset-4" -->
                                        <div>
                                            <table ng-table="myListsTableParams" border="1" cellspacing="0"
                                                cellpadding="4">
                                                <tr>

                                                    <th>Name</th>
                                                    <th>Description</th>
                                                    <th>Owner</th>
                                                    <th>Private</th>
                                                    <th>Group</th>
                                                    <th>Edit</th>
                                                    <th>Suggestion</th>
                                                    <th>Vote</th>
                                                    <th>Items</th>
                                                </tr>
                                                <tbody class="problemcheckboxx" ng-repeat="aList in myLists">

                            <td>{{ aList.name }}</td>
                            <td>{{ aList.description }}</td>
                            <td>{{ aList.owner }}</td>
                            <td>{{ aList.private }}</td>
                            <td>{{ aList.grp }}</td>
                            <td>{{ aList.edit }}</td>
                            <td>{{ aList.suggestion }}</td>
                            <td>{{ aList.vote }}</td>

                            <td>
                                <button type="submit" class="btn btn-primary btn-sm"
                                    ng-click="itemsOfList(aList.name)">Items</button>
                            </td>
                            </tbody>
                            <p class="text-center" ng-show="loading">
                                <span class="fa fa-spinner fa-spin fa-3x"></span>
                            </p>
                    </table>
                </div>
            </div>
            </td>
            <td>
        </div>
        <span id="addListForm">

            <h3> Create a new List: </h3>
            <div class="alert alert-danger" id="listnametaken">List Name already taken!</div>

            <% if (message.length > 0) { %>
            <div class="alert alert-danger"><%= message %></div>
            <% } %>

            <form name="myForm">
                <div class="form-group">
                    <label>List Name</label>
                    <input type="text" class="form-control" name="name" ng-model="formData.name" required
                        placeholder="List Name" maxlength="32"
                        [ngClass]="{'invalid-textbox' :myForm.submitted && !name.valid }" data-toggle="tooltip"
                        title="Enter the List name. Must be unique.">
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <input type="text" class="form-control" name="description" ng-model="formData.description"
                        placeholder="Describe this List" required maxlength="128"
                        [ngClass]="{'invalid-textbox' :myForm.submitted && !description.detail }" data-toggle="tooltip"
                        title="Describe the List.">
                </div>
                <!-- button type="submit" class="btn btn-warning btn-lg">Add</button -->
                <button type="submit" class="btn btn-primary btn-lg" ng-click="createMyList()"
                    ng-disabled="!myForm.name.$dirty || !myForm.description.$dirty || 
                     (myForm.name.$dirty && myForm.name.$invalid) || (myForm.description.$dirty && myForm.description.$invalid) " data-toggle="tooltip" title="Add this new List!">Add</button>

            </form>
        </span>
        </td>
        </tr>
        </table>

    <div ng-viewyvx id=myItemsTable>
        <div class="text-centerx">
            <p>Number of Items in List ({{ currentListName }}): <span class="labelx label-infox">{{ myItems.length }}</span></p>
        </div>
            <div>
                <table ng-table="myItemsTableParams" border="1" cellspacing="0" cellpadding="4">
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Owner</th>
                        <th>List</th>
                        <th>Suggestion</th>
                        <th>Rank</th>
                        <th>Operations</th>
                    </tr>
                    <tbody class="problemcheckboxx" ng-repeat="aItem in myItems">

<td>{{ aItem.name }}</td>
<td>{{ aItem.description }}</td>
<td>{{ aItem.owner }}</td>
<td>{{ aItem.list }}</td>
<td>{{ aItem.suggestion }}</td>
<td>{{ aItem.rank }}</td>

<td>
    <button type="submit" class="btn btn-primary btn-sm" ng-click="myEditItem(aList.name)">Edit</button>
    <button type="submit" class="btn btn-primary btn-sm" ng-click="myRemoveItem(aList.name)">Remove</button>
</td>
</tbody>
<p class="text-center" ng-show="loading">
    <span class="fa fa-spinner fa-spin fa-3x"></span>
</p>
</table>
</div>
</div>

<span id="addItemForm">
    <h3> Create a new Item: </h3>
    <div class="alert alert-danger" id="itemnametaken">Item Name already taken!</div>

    <form name="myItemForm">
        <div class="form-group">
            <label>Item Name</label>
            <input type="text" class="form-control" name="name" ng-model="formItemData.name" required
                placeholder="Item Name" maxlength="32"
                [ngClass]="{'invalid-textbox' :myItemForm.submitted && !name.valid }" data-toggle="tooltip"
                title="Enter the Item name. Must be unique.">
        </div>
        <div class="form-group">
            <label>Description</label>
            <input type="text" class="form-control" name="description" ng-model="formItemData.description"
                placeholder="Describe this Item" required maxlength="128"
                [ngClass]="{'invalid-textbox' :myItemForm.submitted && !description.detail }" data-toggle="tooltip"
                title="Describe the Item.">
        </div>
        <!-- button type="submit" class="btn btn-warning btn-lg">Add</button -->
        <button type="submit" class="btn btn-primary btn-lg" ng-click="createMyItem()"
            ng-disabled="!myItemForm.name.$dirty || !myItemForm.description.$dirty || 
             (myItemForm.name.$dirty && myItemForm.name.$invalid) || 
             (myItemForm.description.$dirty && myItemForm.description.$invalid) " 
             data-toggle="tooltip" title="Add this new Item!">Add</button>

    </form>
</span>

    </div>
    </div>

</body>

</html>