<!doctype html>
<html ng-app="scotchTodo" lang="en">

<head X-Content-Type-Options: nosniff>

    <!-- SPELLS -->
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js"></script><!-- load angular -->
    <!-- script src="//ajax.googleapis.com/ajax/libs/angularjs/1.7.8/angular.min.js"></script -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- jQuery library -->
    <!-- script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <!-- ??? Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.8/angular-filter.min.js"></script>

    <!-- script>import { PaginationModule } from 'ngx-pagination-bootstrap'</script -->

    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css" />

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="/" />

    <script>
        var app = angular.module('myListsController', [])
            .controller('mainController', ['$scope', '$http', 'myLists', '$filter', function ($scope, $http, myLists, $filter) {
                console.log("myLists.ejs: myListsController mainController reached");
                console.log("myLists.ejs :: " + "<%= user.local.email %>" + " :: " + "<%= user.local.screenName %>"
                    + " :: " + "<%= user._id %>");

                $scope.formData = {};
                $scope.formData2 = {};
                $scope.formData3 = {};
                $scope.formItemData = {};
                $scope.formModItemData = {};
                $scope.loading = true;
                $scope.myListsTableParams = {};
                $scope.myRankedLists = [];
                $scope.myGrps = [];
                $scope.myGrpsA = [];
                $scope.myGrpsB = [];
                $scope.myPublicGrps = [];
                $scope.maxNumListsPerUser = 10;
                $scope.maxNumItemsInList = 25;
                console.log("C");
                $scope.myRankingDone = false;
                $scope.myItemNameTaken = false;
                var userEmail = "<%= user.local.email %>";
                $("#listnametaken").hide();
                //$("#itemnametaken").hide();
                $("#myItemsTable").hide();
                $("#addItemForm").hide();
                $("#addListForm").hide();
                $("#modListForm").hide();
                $("#commentForm").hide();
                $("#modItemForm").hide();
                $("#myAnimate").hide();

                $scope.currentPage = 0;
                $scope.currentPage2 = 0;
                $scope.currentPage3 = 0;
                $scope.pageSize = 10;
                $scope.pageSize2 = 10;
                $scope.pageSize3 = 10;
                //$scope.data = [];
                $scope.q = '';
                $scope.q2 = '';
                $scope.q3 = '';
                $scope.myLists = [];
                $scope.myItems = [];
                $scope.myComments = [];
                $scope.buttonCommentFormText = "Show/Add Comments";

                $scope.aboutToShowItems = false;
                $scope.aboutToShowRank = false;

                $scope.sortListCol = 'name';
                $scope.sortListReverse = false;
                $scope.searchList = "again";

                var myWindowWidth;
                var timeoutItem1Loop;
                var timeoutItem10Rotote;
                var timeoutRandomAnimate;
                var myAnimationStopped = false;
                var myDelay = 0;
                var myDelayIncrement = 1000;
                var myFinalPosFromTop = 600;
                var myFinalPosFromTopDecrement = 50;
                var item10Cnt = 0;
                var item10Deg = 0;
                var testAnimateCnt = 0;
                var myeffect = ['bounce', 'flash', 'pulse', 'rubberBand', 'shake', 'headShake', 'pulse', 
                  'tada', 'wobble', 'jello', 'bounce', 'bounce', 'jackInTheBox', 'heartBeat'] ; // hidge, swing out!
                  
                $scope.myShowAll = 'N';
                $scope.buttonShowDetailsText = "Show Details";

                // GET =====================================================================
                myLists.get(userEmail)
                    .success(function (data) {
                        console.log("myLists.ejs: mainController myLists.get success");
                        $scope.myShowAll = 'N';
                        $scope.myLists = data;
                        $scope.loading = false;
                        $("#listnametaken").hide();
                        //$("#itemnametaken").hide();
                        $("#myItemsTable").hide();
                        $("#addItemForm").hide();
                        $("#commentForm").hide();
                        $("#addListForm").hide();
                        $("#modListForm").hide();
                        $("#modItemForm").hide();
                        $("#myAnimate").hide();

                        $scope.aboutToShowItems = false;
                        $scope.aboutToShowRank = false;

                        ////$scope.list = $scope.$parent.personList
                        //$scope.list = $scope.myLists;
                        //$scope.config = {
                        //  itemsPerPage: 5,
                        //  fillLastPage: true
                        //};

                    });

                myLists.getAllGrps()
                    .success(function (grpdata) {
                        console.log("myAdminLists.ejs: mainController myLists.getAllGrps success");
                        //$scope.myGrps = grpdata;
                        //var tmpgrpdataA = grpdata;
                        //var tmpgrpdataB = grpdata;
                        //$scope.myGrpsA = tmpgrpdataA;
                        //$scope.myGrpsB = grpdata;
                        //$scope.myGrps.unshift("Everyone" , "Just Me");
                        //$scope.myGrpsA.unshift("Just Me");

                        $scope.myGrpsA.push("Everyone");
                        $scope.myGrpsA.push("Just Me");
                        $scope.myGrpsB.push("Just Me");
                        for (var i = grpdata.length - 1; i > -1; i--) {
                            //console.log("grpdata[i] = " + grpdata[i]);
                            $scope.myGrps.push(grpdata[i]);
                            $scope.myGrpsA.push(grpdata[i]);
                            $scope.myGrpsB.push(grpdata[i]);
                        }

                        //for (var i = 0; i < $scope.myGrpsA.length; i++) {
                        //  console.log("$scope.myGrpsA[i] = " + $scope.myGrpsA[i]);
                        //}
                        //$scope.myGrpsB = tmpgrpdataB;
                        //$scope.myGrpsB.unshift("Everyone" , "Just Me");JSON
                        //console.log("myAdminLists.ejs: myLists.getAllGrps: $scope.myGrps: " + JSON.stringify($scope.myGrps));
                        //for (var i = 0; i < $scope.myGrpsB.length; i++) {
                        //  console.log("$scope.myGrpsB[i] = " + $scope.myGrpsB[i]);
                        //}

                    });

                myLists.getAllPublicGrps()
                    .success(function (pubgrpdata) {
                        console.log("myAdminLists.ejs: mainController myLists.getAllPublicGrps success");
                        $scope.myPublicGrps = pubgrpdata;
                        //for (var i = 0; i < $scope.myPublicGrps.length; i++) {
                        //  console.log("$scope.myPublicGrps[i].grp = " + $scope.myPublicGrps[i].grp);
                        //}
                    });

                myLists.rankItemsGet()
                    .success(function (myRankedItems) {
                        console.log("myAdminListsRank.ejs: mainController myLists.rankItemsGet success");
                        $scope.myRankedItems = myRankedItems;
                        //console.log("myAdminListsRank.ejs: myLists.getAllGrps: $scope.myGrps: " + JSON.stringify($scope.myRankedItems));
                        var myRankedListsTmp = [];
                        for (var i = 0; i < $scope.myRankedItems.length; i++) {
                            //console.log("$scope.myRankedItems[i].listName = " + $scope.myRankedItems[i].listName);
                            myRankedListsTmp[i] = $scope.myRankedItems[i].listName;
                        }
                        $scope.myRankedLists = Array.from(new Set(myRankedListsTmp));
                        //for (var i = 0; i < $scope.myRankedLists.length; i++) {
                        //  console.log("$scope.myRankedLists = " + $scope.myRankedLists[i]);
                        //}
                    });

                $scope.getData = function () {
                    //return $filter('filter')($scope.data, $scope.q)
                    return $filter('filter')($scope.myLists, $scope.q)
                };

                $scope.numberOfPages = function () {
                    //console.log("$scope.numberOfPages $scope.getData().length: " + $scope.getData().length +
                    //    " $scope.pageSize: " + $scope.pageSize)
                    return Math.ceil($scope.getData().length / $scope.pageSize);
                };

                $scope.$watch('q', function (newValue, oldValue) {
                    //console.log("$scope.$watch(q) reached");
                    if (oldValue != newValue) {
                        $scope.currentPage = 0;
                    }
                }, true
                );

                $scope.getData2 = function () {
                    //return $filter('filter')($scope.data, $scope.q)
                    return $filter('filter')($scope.myItems, $scope.q2)
                };

                $scope.myNumberOfPages2 = function (a, b) {
                    return Math.ceil(a / b);
                };

                $scope.numberOfPages2 = function () {
                    //console.log("$scope.numberOfPages2 $scope.getData2().length: " + $scope.getData2().length +
                    //    " $scope.pageSize2: " + $scope.pageSize2);
                    //return Math.ceil($scope.getData2().length/$scope.pageSize2);
                    return Math.ceil($scope.getData2().length / $scope.pageSize2);
                };

                $scope.$watch('q2', function (newValue, oldValue) {
                    //console.log("$scope.$watch(q2) reached");
                    if (oldValue != newValue) {
                        $scope.currentPage2 = 0;
                    }
                }, true
                );

                $scope.getData3 = function () {
                    //return $filter('filter')($scope.data, $scope.q)
                    return $filter('filter')($scope.myComments, $scope.q3)
                };

                $scope.myNumberOfPages3 = function (a, b) {
                    return Math.ceil(a / b);
                };

                $scope.numberOfPages3 = function () {
                    console.log("$scope.numberOfPages3 $scope.getData3().length: " + $scope.getData3().length +
                        " $scope.pageSize3: " + $scope.pageSize3);
                    return Math.ceil($scope.getData3().length / $scope.pageSize3);
                };

                $scope.$watch('q3', function (newValue, oldValue) {
                    console.log("$scope.$watch(q3) reached");
                    if (oldValue != newValue) {
                        $scope.currentPage3 = 0;
                    }
                }, true
                );

                // CREATE ==================================================================
                $scope.createMyList = function () {
                    console.log("myLists.ejs:  mainController createMyList ");
                    if ($scope.formData.name != undefined) {
                        $scope.loading = true;
                        $scope.formData.owner = userEmail;
                        console.log("myLists.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                        myLists.create($scope.formData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: createMyList ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: createMyList ERROR data.message: " + data.message);
                                message = data.message;
                                $("#listnametaken").show();
                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                console.log("myLists.ejs: createMyList $scope.myLists: " + JSON.stringify($scope.myLists));
                                $("#addListForm").hide();
                                $("#modListForm").hide();
                                $("#myListsTable").show();
                            });
                    }
                };

                $scope.createMyListCancel = function () {
                    console.log("myLists.ejs:  mainController createMyListCancel ");
                    $("#myListsTable").show();
                    $("#addListForm").hide();
                }

                $scope.modifyMyListCancel = function () {
                    console.log("myLists.ejs:  mainController modifyMyListCancel ");
                    $("#myListsTable").show();
                    $("#modListForm").hide();
                };

                $scope.modifyMyList = function () {
                    console.log("myLists.ejs:  mainController modifyMyList ");
                    console.log("myLists.ejs: $scope.formData2: " + JSON.stringify($scope.formData2));
                    if ($scope.formData2.description != undefined) {
                        $scope.loading = true;
                        $scope.formData2.id = $scope.currentListId;
                        //$scope.formData2.name = $scope.currentListName;
                        $scope.formData2.prevListName = $scope.prevListName;
                        $scope.formData2.owner = $scope.currentListOwner;
                        //$scope.formData.description = $scope.formData.description2;
                        console.log("myLists.ejs: $scope.formData2: " + JSON.stringify($scope.formData2));
                        myLists.modify($scope.formData2)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: modifyMyList ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: modifyMyList ERROR data.message: " + data.message);
                                message = data.message;
                                //$("#listnametaken").show();
                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData2 = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                console.log("myLists.ejs: modifyMyList $scope.myLists: " + JSON.stringify($scope.myLists));
                                $("#addListForm").hide();
                                $("#modListForm").hide();
                                $("#myListsTable").show();
                            });
                    }
                };

                $scope.deleteMyList = function (id) {
                    console.log("myLists.ejs:  mainController deleteMyList id: " + id);
                    //$scope.loading = true;
                    if (confirm('Are you sure you want to Delete this List?') == true) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.delMyList({ id: id, owner: userEmail })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                //$("#itemnametaken").hide();
                                $("#myItemsTable").hide();
                                $("#addItemForm").hide();
                                $("#modItemForm").hide();
                                $("#commentForm").hide();
                            });
                    } else {
                        console.log(" No delete");
                    }
                };

                $scope.showNewListForm = function () {
                    //console.log("myLists.ejs:  mainController showNewListForm ");
                    $("#myListsTable").hide();
                    $("#addListForm").show();
                };

                $scope.showModListForm = function (myList) {
                    //console.log("myLists.ejs:  mainController showModListForm ");
                    $scope.currentListId = myList._id;
                    $scope.currentListName = myList.name;
                    $scope.prevListName = myList.name;
                    $scope.currentListDesc = myList.description;
                    $scope.currentListOwner = myList.owner;
                    $scope.currentListPrivate = myList.private;
                    $scope.currentListView = myList.view;
                    $scope.currentListEdit = myList.edit;
                    $scope.currentListRank = myList.rank;
                    $("#myListsTable").hide();
                    $("#modListForm").show();             
                    $scope.formData2.name = myList.name;
                    $scope.myForm2.name.$dirty = true;
                    $scope.formData2.description = myList.description;
                    $scope.myForm2.description.$dirty = true;
                    $scope.formData2.view = myList.view;
                    $scope.myForm2.view.$dirty = true;
                    $scope.formData2.edit = myList.edit;
                    $scope.myForm2.edit.$dirty = true;
                    $scope.formData2.rank = myList.rank;
                    $scope.myForm2.rank.$dirty = true;
                };

                $scope.animateStop = function () {
                    //  clearTimeout(myVar); // stop all timeouts that were set
                    console.log("animateStop called");
                    myAnimationStopped = true;
                    clearTimeout(timeoutItem1Loop);
                    clearTimeout(timeoutItem10Rotote);
                    clearTimeout(timeoutRandomAnimate);

                    myDelay = 0;
                    myDelayIncrement = 1000;
                    myFinalPosFromTop = 600;
                    myFinalPosFromTopDecrement = 50;
                    item10Cnt = 0;
                    item10Deg = 0;
                    testAnimateCnt = 0;
                
                    //$("#buttonAnimateStop").hide();
                    $("#myAnimate").hide();
                    $("#myListsTable").hide();
                    $("#addListForm").hide();
                    $("#modListForm").hide();
                    $("#myItemsTable").show();
                    $("#commentForm").hide();
                    $("#addItemForm").show();
                    $("#modItemForm").hide();
                    $("#listnametaken").hide();
                }

                $scope.animateList = function () {
                    $scope.aboutToShowItems = false;
                    $scope.aboutToShowRank = false;
                    $scope.myItems2 = undefined;
                    $scope.buttonCommentFormText = "Show/Add Comments";

                    myDelay = -955;
                    myDelayIncrement = 1000;
                    myFinalPosFromTop = 600;
                    myFinalPosFromTopDecrement = 50;
                    item10Cnt = 0;
                    item10Deg = 0;
                    testAnimateCnt = 0;

                    $("#myListsTable").hide();
                    $("#addListForm").hide();
                    $("#modListForm").hide();
                    $("#myItemsTable").hide();
                    $("#commentForm").hide();
                    $("#addItemForm").hide();
                    $("#modItemForm").hide();
                    $("#listnametaken").hide();
                    //$("#buttonAnimateStop").show();
                    $("#myAnimate").show();
                
                    myAnimationStopped = false;
                    myStartToAnimate();
                };

                $scope.backToList = function () {
                    $scope.aboutToShowItems = false;
                    $scope.aboutToShowRank = false;
                    //$scope.myItems2 = [];
                    $scope.myItems2 = undefined;

                    $scope.buttonCommentFormText = "Show/Add Comments";

                    // if ?? then
                    if ($scope.myRankingDone) {
                        myLists.rankItemsGet()
                            .success(function (myRankedItems) {
                                console.log("myLists.ejs: mainController backToList myLists.rankItemsGet success");
                                $scope.myRankedItems = myRankedItems;
                                var myRankedListsTmp = [];
                                for (var i = 0; i < $scope.myRankedItems.length; i++) {
                                    //console.log("$scope.myRankedItems[i].listName = " + $scope.myRankedItems[i].listName);
                                    myRankedListsTmp[i] = $scope.myRankedItems[i].listName;
                                }
                                $scope.myRankedLists = Array.from(new Set(myRankedListsTmp));
                                //for (var i = 0; i < $scope.myRankedLists.length; i++) {
                                //  console.log("$scope.myRankedLists = " + $scope.myRankedLists[i]);
                                //}
                            });
                        $scope.myRankingDone = false;
                    };
                    $("#myListsTable").show();
                    $("#addListForm").hide();
                    $("#modListForm").hide();
                    $("#myItemsTable").hide();
                    $("#commentForm").hide();
                    $("#addItemForm").hide();
                    $("#modItemForm").hide();
                };

                $scope.showCommentForm = function () {
                    if ($scope.buttonCommentFormText == "Hide Comments") {
                        $("#addItemForm").show();
                        $("#modItemForm").hide();
                        $scope.buttonCommentFormText = "Show/Add Comments";
                        $("#commentForm").hide();
                    } else {
                        // get all comments for this list in timestamp order to update display.
                        $scope.formData3.userId = "<%= user._id %>";
                        $scope.formData3.listName = $scope.currentListName;
                        $scope.formData3.owner = userEmail;
                        $scope.formData3.screenName = "<%= user.local.screenName %>";
                        $scope.formData3.listOwner = $scope.currentListOwner;
                        $scope.formData3.listId = $scope.currentListId;
                        myLists.getComments($scope.formData3)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs:  ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs:  ERROR data.message: " + data.message);
                                //    //message = data.message;
                                //    //$("#listnametaken").show();
                            })
                            .success(function (data) {
                                $scope.loading = false;
                                //    console.log("myLists.ejs: get comments success data: " + JSON.stringify(data));
                                $scope.myComments = data; //
                            });
                        $("#addItemForm").hide();
                        $("#modItemForm").hide();
                        $scope.buttonCommentFormText = "Hide Comments";
                        $("#commentForm").show();
                    }
                };

                $scope.inMyGroups = function (tmpGrp) {
                    //console.log("myLists.ejs:  mainController inMyGroups  tmpGrp: " + tmpGrp);
                    return $scope.myGrps.includes(tmpGrp);
                    //return true;
                };

                $scope.isMyOwner = function (tmpUser) {
                    //console.log("myLists.ejs:  mainController isMyOwner  tmpUser: " + tmpUser);
                    if (tmpUser == userEmail) {
                        return true;
                    } else {
                        return false;
                    }
                }

                $scope.moreListsAllowed = function () {
                    //console.log("moreListsAllowed reached");
                    if ($scope.myLists == undefined) return true;
                    //console.log("moreListsAllowed $scope.myLists.length : " + $scope.myLists.length);
                    //$("#itemnametaken").hide();
                    var tmpLists = $scope.myLists.filter(function (myList) {
                        return myList.owner == userEmail;
                    });
                    //console.log("moreListsAllowed tmpLists.length : " + tmpLists.length);
                    if (tmpLists.length < $scope.maxNumListsPerUser) {
                        return true;
                    } else {
                        return false;
                    }
                }

                $scope.moreItemsAllowed = function () {
                    //console.log("moreItemsAllowed reached");
                    if ($scope.myItems == undefined) return true;
                    //console.log("moreItemsAllowed $scope.myItems.length : " + $scope.myItems.length);
                    if ($scope.myItems.length < $scope.maxNumItemsInList) {
                        return true;
                    } else {
                        return false;
                    }
                }

                $scope.itemsOfList = function (listName) {
                    console.log("myLists.ejs:  mainController itemsOfList listName: " + listName);
                    $("#addListForm").hide();
                    $("#ListForm").hide();
                    $scope.currentListName = listName;
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            //$("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                            $("#modItemForm").hide();
                            //$("#commentForm").show();
                            $("#commentForm").hide();
                        });
                };

                //<span ng-if="inMyGroups(aList.edit) || isMyOwner(aList.owner)">
                $scope.itemsOfList2 = function (listName, editGrp, myOwner) {
                    console.log("myLists.ejs:  mainController itemsOfList2 listName: " + listName +
                        " editGrp: " + editGrp + " myOwner: " + myOwner);
                    $("#addListForm").hide();
                    $("#modListForm").hide();
                    $scope.currentListName = listName;
                    $scope.allowEdit = false;
                    if ($scope.inMyGroups(editGrp) || $scope.isMyOwner(myOwner)) {
                        $scope.allowEdit = true;
                    }
                    console.log("myLists.ejs:  mainController itemsOfList2 $scope.allowEdit: " + $scope.allowEdit);
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            //$("#itemnametaken").hide();
                            $scope.myItemNameTaken = false;
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            //$("#commentForm").show();
                            $("#commentForm").hide();
                            if ($scope.allowEdit) {
                                $("#addItemForm").show();
                            };
                            $("#modItemForm").hide();
                        });
                };

                $scope.itemsOfList3 = function (myList) { // listName, editGrp, myOwner) {
                    var listName = myList.name;
                    var editGrp = myList.edit;
                    var myOwner = myList.owner;
                    var myListId = myList._id;
                    $scope.aboutToShowItems = true;
                    $scope.aboutToShowRank = false;
                    $scope.editGrp = myList.edit;
                    $scope.rankGrp = myList.rank;
                    $scope.currentListOwner = myOwner;
                    $scope.currentListId = myListId;
                    console.log("myLists.ejs:  mainController itemsOfList3 listName: " + listName +
                        " editGrp: " + editGrp + " myOwner (list): " + myOwner + " myListId " + myListId);
                    $("#addListForm").hide();
                    $("#modListForm").hide();
                    $scope.currentListName = listName;
                    $scope.allowEdit = false;
                    if ($scope.inMyGroups(editGrp) || $scope.isMyOwner(myOwner)) {
                        $scope.allowEdit = true;
                    }
                    console.log("myLists.ejs:  mainController itemsOfList3 $scope.allowEdit: " + $scope.allowEdit);
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            //$("#itemnametaken").hide();
                            $scope.myItemNameTaken = false;
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            //$("#commentForm").show();
                            $("#commentForm").hide();
                            if ($scope.allowEdit) {
                                $("#addItemForm").show();
                            };
                            $("#modItemForm").hide();
                        });
                };

                $scope.itemsOfListRank = function (myList) {
                    console.log("myLists.ejs:  mainController itemsOfListRank listName: " + myList.name);
                    $("#addListForm").hide();
                    $("#modListForm").hide();
                    $scope.currentListName = myList.name;
                    $scope.currentListOwner = myList.owner;
                    $scope.currentListId = myList._id;
                    //$scope.myRankingDone = false;
                    $scope.aboutToShowItems = false;
                    $scope.aboutToShowRank = true;
                    myLists.getItems($scope.currentListName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $scope.myItems2 = [];
                            $("#listnametaken").hide();
                            //$("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").hide();
                            $("#modItemForm").hide();
                            $("#commentForm").hide();
                        });
                };

                $scope.myCopyLink = function (listName) {
                    console.log("myCopyLink call with $scope.currentListName = " + $scope.currentListName);
                    console.log("window.location.href: " + window.location.href);
                    var selBox = document.createElement('textarea');
                    selBox.style.position = 'fixed';
                    selBox.style.left = '0';
                    selBox.style.top = '0';
                    selBox.style.opacity = '0';
                    //selBox.value = "http://localhost:8080/myPublicListsItems/" + $scope.currentListName; /myPublicListsItems
                    var tmpURLx = window.location.href;
                    tmpURLx = tmpURLx.replace("myLists", "myPublicLists");
                    //selBox.value =  window.location.href + "Items/" + $scope.currentListName;
                    selBox.value = tmpURLx + "Items/" + $scope.currentListName;
                    document.body.appendChild(selBox);
                    selBox.focus();
                    selBox.select();
                    document.execCommand('copy');
                    document.body.removeChild(selBox);
                };

                $scope.modifyMyItemCancel = function () {
                    console.log("myLists.ejs:  mainController modifyMyItemCancel ");
                    //$("#modItemForm").hide();
                    $("#addItemForm").show(); 
                    $("#modItemForm").hide();                   
                };

                $scope.modifyMyItem = function () {
                    console.log("myLists.ejs: modifyMyItem $scope.formModItemData: " + JSON.stringify($scope.formModItemData));
                    $scope.formModItemData.list = $scope.currentListName;
                    $scope.formModItemData.listItemId = $scope.currentListItemId;
                    if (checkForDupModItem()) {
                            return;
                    };
                    console.log("myLists.ejs: modifyMyItem $scope.formModItemData: " + JSON.stringify($scope.formModItemData));
                    myLists.modifyItem($scope.formModItemData)
                        .error(function (data) {
                            $scope.loading = false;
                            console.log("myLists.ejs: modifyMyItem ERROR data: " + JSON.stringify(data));
                            console.log("myLists.ejs: modifyMyItem ERROR data.message: " + data.message);
                            message = data.message;
                            //$("#listnametaken").show();
                        })
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formModItemData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            console.log("myLists.ejs: modifyMyItem $scope.myItems: " + JSON.stringify($scope.myItems));                                $("#addListForm").hide();
                            
                            $("#modItemForm").hide();
                            $("#addItemForm").show();
                        });
                    //$("#modItemForm").hide();
                    //$("#addItemForm").show();
                };

                $scope.createMyItem = function () {
                    console.log("myLists.ejs:  mainController createMyItem ");
                    //console.log("myLists.ejs: $scope.myItems: " + JSON.stringify($scope.myItems));
                    if ($scope.formItemData.name != undefined) {
                        if (checkForDupItem()) {
                            //$("#itemnametaken").show();
                            return;
                        }
                        $scope.loading = true;
                        $scope.formItemData.list = $scope.currentListName;
                        $scope.formItemData.owner = userEmail;
                        console.log("myLists.ejs: $scope.formItemData: " + JSON.stringify($scope.formItemData));
                        myLists.createItem($scope.formItemData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: createMyItem ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: createMyItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                //$("#itemnametaken").show();
                            })
                            .success(function (data) {
                                //$scope.loading = false;
                                $scope.formItemData = {}; // clear the form so our user is ready to enter another
                                //$("#itemnametaken").hide();
                                $scope.myItems = data; // 

                                myLists.get(userEmail)
                                    .success(function (dataX) {
                                        //console.log("myLists.ejs: mainController myLists.get success");
                                        $scope.myLists = dataX;
                                        $scope.loading = false;
                                        //console.log("myLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                                    });
                            });
                    };
                };

                $scope.addCommentOnList = function () {
                    console.log("myLists.ejs:  mainController addCommentOnList $scope.currentListName: " + $scope.currentListName);
                    $scope.loading = true;
                    //$scope.formData3.testData = "abc";
                    $scope.formData3.userId = "<%= user._id %>";
                    $scope.formData3.listName = $scope.currentListName;
                    $scope.formData3.owner = userEmail;
                    $scope.formData3.screenName = "<%= user.local.screenName %>";
                    $scope.formData3.listOwner = $scope.currentListOwner;
                    $scope.formData3.listId = $scope.currentListId;
                    console.log("myLists.ejs: $scope.formData3: " + JSON.stringify($scope.formData3));
                    myLists.createComment($scope.formData3)
                        .error(function (data) {
                            $scope.loading = false;
                            console.log("myLists.ejs: addCommentOnList ERROR data: " + JSON.stringify(data));
                            console.log("myLists.ejs: addCommentOnList ERROR data.message: " + data.message);
                            //messageItem = data.message;
                            //$("#itemnametaken").show();
                        })
                        .success(function (data) {
                            //$scope.loading = false;
                            //$scope.formData3 = {}; // clear the form so our user is ready to enter another
                            console.log("myLists.ejs: create comment success data: " + JSON.stringify(data));
                            $scope.loading = false;
                            $scope.myComments = data;
                        });
                };

                $scope.myRemoveItem = function (id) {
                    console.log("myLists.ejs:  mainController myRemoveItem ");
                    if (confirm("Really Remove this Item from this List?")) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.deleteItem({ "listName": $scope.currentListName, "id": id })
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: myRemoveItem ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: myRemoveItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                //$("#itemnametaken").show(); // FIX this
                            })
                            .success(function (data) {
                                //$scope.loading = false;
                                $scope.myItems = data; // 
                                //$("#itemnametaken").hide();
                                console.log("myLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                                // ??? Is this needed ???
                                myLists.get(userEmail)
                                    .success(function (dataX) {
                                        $scope.myLists = dataX;
                                        $scope.loading = false;
                                    });
                            });
                    };
                };

                $scope.deleteMyComment = function (myComment) {
                    console.log("myLists.ejs:  mainController deleteMyComment ");
                    if (confirm("Really Remove this Comment?")) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.deleteComment(myComment)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: myRemoveItem ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: myRemoveItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                //$("#itemnametaken").show(); // FIX this
                            })
                            .success(function (data) {
                                $scope.myComments = data; // 
                            });
                    };
                };

                $scope.myEditItem = function (myItem) {
                    console.log("myLists.ejs:  mainController myEditItem myItem: " + JSON.stringify(myItem));
                    //alert("Not yet implemented!");
                    //if(confirm("Not yet implemented")) {   
                    //  console.log("Yes"); 
                    //} else {
                    //  console.log("No");
                    //}
                    $("#addItemForm").hide();
                    $scope.buttonCommentFormText = "Show/Add Comments";
                    $("#commentForm").hide();
                    $("#modItemForm").show();
                    $scope.currentListItemId = myItem._id;
                    $scope.formModItemData.name = myItem.name; //"ABC";
                    $scope.myModItemForm.name.$dirty = true;
                    $scope.formModItemData.description = myItem.description; //"XYZ";
                    $scope.myModItemForm.description.$dirty = true;
                };

                function checkForDupItem() {
                    for (var i = 0; i < $scope.myItems.length; i++) {
                        if ($scope.myItems[i].name == $scope.formItemData.name) {
                            $scope.myItemNameTaken = true;
                            return true;
                        };
                    };
                    $scope.myItemNameTaken = false;
                    return false;
                    //$scope.myItemNameTaken = false;
                };

                function checkForDupModItem() {
                    for (var i = 0; i < $scope.myItems.length; i++) {
                        if ($scope.myItems[i].name == $scope.formModItemData.name &&
                            $scope.myItems[i]._id != $scope.formModItemData.listItemId) {
                            $scope.myItemModNameTaken = true;
                            return true;
                        };
                    };
                    $scope.myItemModNameTaken = false;
                    return false;
                };

                $scope.mySelectItem = function (myItem) {
                    console.log("myAdminListsRank.ejs:  mainController mySelectItem ");
                    //console.log("myAdminLists.ejs: mySelectItem $scope.myItems: " + JSON.stringify($scope.myItems));
                    $scope.myItems2.push(myItem);
                    // Adjust this for Ipad IOS 9
                    //$scope.myItems = $scope.myItems.filter(item => item._id !== myItem._id);
                    $scope.myItems = $scope.myItems.filter(function (item) { return item._id !== myItem._id; });
                    //console.log("myAdminLists.ejs: mySelectItem $scope.myItems2: " + JSON.stringify($scope.myItems2));
                };

                $scope.myRemoveItem2 = function (myItem) {
                    console.log("myAdminListsRank.ejs:  mainController myRemoveItem2 ");
                    console.log("myAdminLists.ejs: myRemoveItem2 $scope.myItems: " + JSON.stringify($scope.myItems));
                    $scope.myItems.push(myItem);
                    // Adjust this for Ipad IOS 9
                    //$scope.myItems2 = $scope.myItems2.filter(item => item._id !== myItem._id);
                    $scope.myItems2 = $scope.myItems2.filter(function (item) { return item._id !== myItem._id; });
                    console.log("myAdminLists.ejs: myRemoveItem2 $scope.myItems2: " + JSON.stringify($scope.myItems2));
                };

                $scope.moveUp = function (value, index) {
                    console.log("moveUp reached");
                    if (index > 0) {
                        const tmp = this.myItems2[index - 1];
                        this.myItems2[index - 1] = this.myItems2[index];
                        this.myItems2[index] = tmp;
                    }
                };

                $scope.moveDown = function (value, index) {
                    console.log("moveDown reached");
                    if (index + 1 < this.myItems2.length) {
                        const tmp = this.myItems2[index + 1];
                        this.myItems2[index + 1] = this.myItems2[index];
                        this.myItems2[index] = tmp;
                    }
                };

                $scope.RemoveMyRankings = function (listName) {
                    console.log("myAdminListsRank.ejs:  mainController RemoveMyRankings listName: " + listName);
                    if (confirm("Really Remove your Rankings of the Items of this List?")) {
                        myLists.rankItemsRemove({ "listName": listName })
                            .error(function (data) {
                                $scope.loading = false;
                                //console.log("myAdminListsRank.ejs: RemoveMyRankings ERROR data: " + JSON.stringify(data));
                            })
                            .success(function (data) {
                                location.reload();
                            });
                    };
                };

                $scope.saveMyRanking = function () {
                    console.log("myLists.ejs: saveMyRanking $scope.myItems2: " + JSON.stringify($scope.myItems2));
                    console.log("myLists.ejs: saveMyRanking $scope.currentListName: " + $scope.currentListName);
                    console.log("myLists.ejs: saveMyRanking $scope.currentListOwner: " + $scope.currentListOwner);
                    console.log("myLists.ejs: saveMyRanking $scope.currentListId: " + $scope.currentListId);
                    //for (var i = 0; i < $scope.myItems2.length; i++ ) {
                    //}
                    $scope.loading = true;
                    console.log("A");
                    $scope.myRankingDone = true;
                    //$scope.currentListName = $scope.myItems2[0].list;
                    //console.log("myLists.ejs: saveMyRanking $scope.currentListName: " + $scope.currentListName);
                    var myCurList = {
                        name: $scope.currentListName, owner: $scope.currentListOwner,
                        _id: $scope.currentListId
                    };

                    myLists.rankItems($scope.myItems2)
                        .error(function (data) {
                            $scope.loading = false;
                            console.log("myAdminLists.ejs: saveMyRanking ERROR data: " + JSON.stringify(data));
                        })
                        .success(function (data) {
                            console.log("B");
                            $scope.myRankingDone = true;
                            //$scope.itemsOfListRank($scope.currentListName);
                            $scope.itemsOfListRank(myCurList);
                        });
                };

                $scope.myPointsFunction = function (myRank, numItemsToRank) {
                    return myRankAlgorithm(myRank);
                };

                $scope.myGetDateFromTimeStamp = function (myTime) {
                    return myTime.substring(0, 10);
                };

                function myRankAlgorithm(myRank) {
                    if (myRank == 1) { return 10; };
                    if (myRank == 2) { return 9; };
                    if (myRank == 3) { return 8; };
                    if (myRank == 4) { return 7; };
                    if (myRank == 5) { return 6; };
                    if (myRank == 6) { return 5; };
                    if (myRank == 7) { return 4; };
                    if (myRank == 8) { return 3; };
                    if (myRank == 9) { return 2; };
                    if (myRank == 10) { return 1; };
                };

                // animation stuff - also var defined above and some start and stop functions above
                //<!-- % include myAnimateCode % -->

                //function sleep(delay) {
                  //  var start = new Date().getTime();
                  //  while (new Date().getTime() < start + delay);
                //}

                function item1looping() {
                    //$('#item1').fadeOut(1000);
                    //$('#item1').fadeIn(1000);
                    $('#item1').animate({color: 'red'}, 500);
                    $('#item1').animate({color: 'blue'}, 500);
                    if (!myAnimationStopped) {
                        timeoutItem1Loop = setTimeout(function(){
                            item1looping();
                        }, 1010);
                    }
                };

                function item10rotate() {
                    if (item10Deg == 270) {
	                    item10Deg = 0;
                    } else {
	                    item10Deg = item10Deg + 30;
                    };
                    $('#item10')
                        .delay(6000).animate({ color: 'green'}, 500)
                        .css({"transform":"rotateZ(" + item10Deg + "deg)"});
                        //.css({"transform":"rotateZ(30deg)"}); 
                    if (!myAnimationStopped) {
                        item10Cnt = item10Cnt + 1;
                        if (item10Cnt < 10) {
                            timeoutItem10Rotote = setTimeout(function(){
                                item10rotate();
                            }, 1000);
                        }
                    }
                };

                function myLeftAnimate(myElement) {
                    var element2 = $('#' + myElement);
                    myDelay = myDelay + myDelayIncrement;
                    myFinalPosFromTop = myFinalPosFromTop - myFinalPosFromTopDecrement;
                    

                    element2.animate( {top: "+=100px"} ).delay(myDelay).show(myDelayIncrement)
                        //.animate({left: '50%'}, 1000)
                        .animate({left: $(window).width() / 3 }, 1000)
                        .animate({fontSize: '2em', color: 'red'}, 500)
                        .animate( {top: myFinalPosFromTop + "px"}, 1100 );
                    //setTimeout(function(){
                        //    myRandomAnimate(myElement);
                    //  }, 5000);
                    myRandomAnimate(myElement);
                };


                $scope.myShowDetails = function () {
                    if ($scope.buttonShowDetailsText == "Hide Details") {
                        $scope.buttonShowDetailsText = "Show Details";
                        $scope.myShowAll = 'N';
                    } else {
                        $scope.buttonShowDetailsText = "Hide Details";
                        $scope.myShowAll = 'Y';
                    }
                };

            }]);

        app.filter('startFrom', function () {
            //filter('startFrom', function() {
            //function filter('startFrom', function() {
            return function (input, start) {
                start = +start;
                return input.slice(start);
            }
        });

    </script>
 
    <script>
        angular.module('myListsService', [])
            .factory('myLists', ['$http', function ($http) {
                return {
                    get: function (owner) {
                        console.log("myLists.ejs: service myLists get");
                        //return $http.get('/api/myLists');
                        return $http.get('/api/myListsOwner/' + owner);
                    },
                    create: function (Data) {
                        console.log("myLists.ejs: service myLists create");
                        return $http.post('/api/myLists', Data);
                    },
                    modify: function (Data) {
                        console.log("myLists.ejs: service myLists modify");
                        return $http.post('/api/modMyList', Data);
                    },
                    delete: function (id) {
                        console.log("myLists.ejs: service myLists delete");
                        return $http.delete('/api/myLists/' + id);
                    },
                    delMyList: function (Data) {
                        console.log("myLists.ejs: service myLists delMyList");
                        return $http.post('/api/delMyList', Data);
                    },
                    change: function (id) {
                        console.log("myLists.ejs: service myLists change");
                        return $http.get('/api/myLists/' + id);
                    },
                    getItems: function (listName) {
                        console.log("myLists.ejs: service myLists getItems");
                        return $http.get('/api/myItems/' + listName);
                    },
                    createItem: function (Data) {
                        console.log("myLists.ejs: service myLists createItem");
                        return $http.post('/api/myItems', Data);
                    },
                    deleteItem: function (Data) {
                        console.log("myLists.ejs: service myLists deleteItem");
                        return $http.post('/api/myItemsRemove', Data); // + {"listName" : listName, "id" : id});
                    },
                    getAllGrps: function () {
                        console.log("myAdminLists.ejs: service myLists getAllGrps");
                        return $http.get('/api/getAllMyGrps');
                    },
                    getAllPublicGrps: function () {
                        console.log("myAdminLists.ejs: service myLists getAllPublicGrps");
                        return $http.get('/api/getAllPublicGrps');
                    },
                    rankItems: function (Data) {
                        console.log("myAdminListsRank.ejs: service myLists rankItems");
                        return $http.post('/api/myItemsRank', Data);
                    },
                    rankItemsRemove: function (Data) {
                        console.log("myAdminListsRank.ejs: service myLists rankItemsRemove");
                        return $http.post('/api/myItemsRankRemove', Data);
                    },
                    rankItemsGet: function (Data) {
                        console.log("myAdminListsRank.ejs: service myLists rankItemsGet");
                        return $http.post('/api/myItemsRankGet', Data);
                    },
                    createComment: function (Data) {
                        console.log("myLists.ejs: service myLists createComment");
                        return $http.post('/api/myListComments', Data);
                    },
                    getComments: function (Data) {
                        console.log("myLists.ejs: service myLists getComments");
                        return $http.post('/api/myGetComments', Data);
                    },
                    deleteComment: function (Data) {
                        console.log("myLists.ejs: service myLists deleteComment");
                        return $http.post('/api/myDeleteComment', Data);
                    },
                    modifyItem: function (Data) {
                        console.log("myLists.ejs: service myLists modifyItem");
                        return $http.post('/api/modMyItem', Data);
                    }
                }
            }]);
    </script>


    <!-- link rel = "stylesheet"
           href = "https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css">
        <script src = "https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
        <script src = "https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-animate.min.js"></script>
        <script src = "https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-aria.min.js"></script> 
        <script src = "https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-messages.min.js"></script>

        <script src = "https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.js"></script -->

    <!-- script type = "text/javascript">    
           angular.module('firstApplication', ['ngMaterial']);
        </script -->

    <script>
        angular.module('scotchTodo', ['myListsController', 'myListsService', 'angular.filter']); //, 'ngMaterial']);
        //angular.module('scotchTodo', ['myListsController', 'myListsService', 'angular.filter','ngMaterial']);
    </script>
    <title>Top 10 Lists</title>
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" / -->
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" / -->
    <!-- link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" -->

    <style>
        body {
            padding-top: 0px;
            word-wrap: break-word;
        }
        .table-striped>tbody:nth-child(2n+1)>tr {background-color: lightgray;} 
        .table-striped>tbody:nth-child(2n+0)>tr {background-color: gray;} 
    </style>
</head>

<body class="bg-secondary text-white">
<div  ng-controller="mainController" id='main' class="container-fluid">
<% include myNavBar %>
<!-- -div ng-viewx -->
<!-- div ng-controller="mainController" -->
<!-- div class="container-fluid" -->
    <table>
        <tr>
            <td>
                <div ng-view id=myListsTable>
                    
                    <h3><span class="fa "></span> My Lists ({{ myLists.length }})
                        <span ng-if="moreListsAllowed()">
                            <button type="submit" class="btn btn-primary btn-sm"
                                ng-click="showNewListForm()"
                                data-toggle="tooltip"
                                title="Click to add a new List">New List
                            </button>
                        </span>
                        <span ng-if="!moreListsAllowed()">
                            <p> Maximum number of Lists allowed reached. </p>
                        </span>
                        <span ng-if="myShowAll != 'Y'">(click to open)</span>
                        <button type="submit" class="btn btn-primary btn-sm"
                            ng-click="myShowDetails()">{{ buttonShowDetailsText }}</button>
                    </h3>
                    
                    <!-- div id="myLists-listx" -->
                    <!-- div class="col-sm-4 col-sm-offset-4" -->
                        <table ng-table="myListsTableParams" border="0" cellspacing="0" cellpadding="0"
                        class="table table-striped" >
                            <tr ng-if="myShowAll == 'Y'">
                                <th>Name</th>
                                <th>Description</th>
                                <th>Owner</th>
                                <!-- th>Private</th -->
                                <th>View Grp</th>
                                <th>Edit Grp</th>
                                <th>Rank Grp</th>
                                <!-- th>Suggestion</th -->
                                <!-- th>Vote</th -->    
                                <th>Items</th>
                            </tr>
                            <!-- tbody class="problemcheckboxx" ng-repeat="aList in myLists | orderBy: 'name'
                                | filter:q | startFrom:currentPage*pageSize | limitTo:pageSize" -->
                            <tbody class="problemcheckboxx" ng-repeat="aList in myLists | orderBy:sortListCol:sortListReverse
                                | filter:q | startFrom:currentPage*pageSize | limitTo:pageSize" > <!-- | searchList" -->
                                
                                <td data-toggle="tooltip" title= "{{aList.description}}" 
                                    ng-click="itemsOfList3(aList)" >{{ aList.name }}
                                </td>
                                <td ng-if="myShowAll == 'Y'">{{ aList.description }}</td>
                                                
                                <td ng-if="myShowAll == 'Y'">{{ aList.owner }}</td>
                                <!-- td>{{ aList.private }}</td -->
                                <td ng-if="myShowAll == 'Y'">{{ aList.view }}</td>
                                <td ng-if="myShowAll == 'Y'">{{ aList.edit }}</td>
                                <td ng-if="myShowAll == 'Y'">{{ aList.rank }}</td>
                                <!-- td>{{ aList.suggestion }}</td -->
                                <!-- td>{{ aList.vote }}</td -->
                                <td>
                                    <span ng-if="isMyOwner(aList.owner)">
                                        <button type="submit" class="btn btn-primary btn-sm"
                                            ng-click="showModListForm(aList)" data-toggle="tooltip"
                                            title="Modify the List">Mod</button>
                                    </span>
                                    <button ng-if="myShowAll == 'Y'" type="submit" class="btn btn-primary btn-sm"
                                        ng-click="itemsOfList3(aList)"  data-toggle="tooltip"
                                        title="Show the List Items">Items</button>
                                    <span ng-if="aList.itemCnt == '0' ">
                                        <span ng-if="inMyGroups(aList.edit) || isMyOwner(aList.owner)">
                                            <button type="submit" class="btn btn-primary btn-sm"
                                                ng-click="deleteMyList(aList._id)" data-toggle="tooltip"
                                                title="Delete this List">Del</button>
                                        </span>
                                    </span>
                                    <span ng-if="inMyGroups(aList.rank) || isMyOwner(aList.owner)">
                                        <span ng-if="!myRankedLists.includes(aList.name)">
                                            <button type="submit" class="btn btn-primary btn-sm"
                                                ng-click="itemsOfListRank(aList)" data-toggle="tooltip"
                                                title="Rank Items in this List">Rank</button>
                                        </span>
                                        <span ng-if="myRankedLists.includes(aList.name)">
                                            <button type="submit" class="btn btn-primary btn-sm"
                                                ng-click="RemoveMyRankings(aList.name)" data-toggle="tooltip"
                                                title="Delete your Ranking of Items to ReRank">Remove Rank </button>
                                        </span>
                                    </span>
                                </td>
                            </tbody>
                            <p class="text-center" ng-show="loading">
                                <span class="fa fa-spinner fa-spin fa-3x"></span>
                            </p>
                        </table>
                    <!-- /div -->

                    <table>
                        <tr>&nbsp;</tr>
                        <tr>
                            <td>
                                <button ng-disabled="currentPage == 0" ng-click="currentPage=currentPage-1"
                                    class="btn btn-primary btn-sm">Previous</button>
                                {{currentPage+1}}/{{numberOfPages()}}
                                <button ng-disabled="currentPage >= getData().length/pageSize - 1"
                                    ng-click="currentPage=currentPage+1" class="btn btn-primary btn-sm">Next</button>
                            </td>
                            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>&nbsp;&nbsp;</td>
                            <td>
                                Set Rows per Page
                                <!-- input ng-model="q" id="search" class="form-control" placeholder="Set Rows per Page" / -->
                            </td>
                            <td>
                                <select ng-model="pageSize" id="pageSize" class="form-control btn btn-primary btn-sm">
                                    <option value="5">5</option>
                                    <option value="10">10</option>
                                    <option value="15">15</option>
                                    <option value="20">20</option>
                                </select>
                            </td>
                        </tr>
                    </table>

                </div>
            </td>
        </tr>

        <tr>
            <td>

                <span id="addListForm">
                    <h3> Create a new List: </h3>
                    <div class="alert alert-danger" id="listnametaken">List Name already taken!</div>
                    <% if (message.length > 0) { %>
                        <div class="alert alert-danger"><%= message %></div>
                    <% } %>
                    <form name="myForm">
                        <div class="form-group">
                            <label>List Name</label>
                            <input type="text" class="form-control" name="name" ng-model="formData.name" required
                                placeholder="List Name" maxlength="32"
                                [ngClass]="{'invalid-textbox' :myForm.submitted && !name.valid }" data-toggle="tooltip"
                                title="Enter the List name. Must be unique." />
                        </div>
                        <div class="form-group">
                            <label>Description</label>
                            <input type="text" class="form-control" name="description" ng-model="formData.description"
                                placeholder="Describe this List" required maxlength="128"
                                [ngClass]="{'invalid-textbox' :myForm.submitted && !description.valid }"
                                data-toggle="tooltip" title="Describe the List." />
                        </div>
                        <!-- div class="form-group">
                            <label>Make this List Public so Everyone can see it (Y/N)</label>
                            <select type="text" class="form-control" name="public" ng-model="formData.public" required
                                placeholder="N" data-toggle="tooltip" title="Public = Y, Everyone can see it!">
                                <option value="Y" selected >Y</option>
                                <option value="N" >N</option>
                            </select>
                        </div -->
                        <div class="form-group">
                            <label>Who can See this List <label>
                            <select class="form-control" name="view" ng-model="formData.view"
                                ng-options="grp for grp in myGrpsA" placeholder="Select Group" required
                                [ngClass]="{'invalid-textbox' :myForm.submitted && !view.valid }"
                                data-toggle="tooltip" title="Enter the Group that can See this List.">
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Who can Edit this List <label>
                            <select class="form-control" name="edit" ng-model="formData.edit"
                                ng-options="grp for grp in myGrpsB" placeholder="Select Group" required
                                [ngClass]="{'invalid-textbox' :myForm.submitted && !edit.valid }"
                                data-toggle="tooltip" title="Enter the Group that can Edit this List.">
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Who can Vote/Rank Items in this List <label>
                            <select class="form-control" name="rank" ng-model="formData.rank"
                                ng-options="grp for grp in myGrpsB" placeholder="Select Group" required
                                [ngClass]="{'invalid-textbox' :myForm.submitted && !rank.valid }"
                                data-toggle="tooltip" title="Enter the Group that can Rank this List.">
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary btn-lg" ng-click="createMyList()" 
                            ng-disabled="!myForm.name.$dirty || !myForm.description.$dirty || !myForm.view.$dirty || 
                            !myForm.edit.$dirty || !myForm.rank.$dirty ||
                            (myForm.name.$dirty && myForm.name.$invalid) || 
                            (myForm.description.$dirty && myForm.description.$invalid) || 
                            (myForm.view.$dirty && myForm.view.$invalid) || 
                            (myForm.edit.$dirty && myForm.edit.$invalid) || 
                            (myForm.rank.$dirty && myForm.rank.$invalid)" data-toggle="tooltip"
                            title="Add this new List!">Add</button>
                        <button type="submit" class="btn btn-primary btn-lg"
                            ng-click="createMyListCancel()">Cancel</button>
                    </form>
                </span>

            </td>
        </tr>
        <tr>
            <td>

                <span id="modListForm">
                    <h3> Modify the {{ currentListName }} List. </h3>
                    <% if (message.length > 0) { %>
                    <div class="alert alert-danger"><%= message %></div>
                    <% } %>
                    <form name="myForm2">
                        <div class="form-group">
                            <label>List Name</label>
                            <input type="text" class="form-control" name="name" ng-model="formData2.name" required
                                 maxlength="32"
                                [ngClass]="{'invalid-textbox' :myForm2.submitted && !name.valid }" data-toggle="tooltip"
                                title="Enter the List name. Must be unique." />
                        </div>
                        <!-- [ngClass]="{'invalid-textbox' :myForm2.submitted && !description.valid }" -->
                        <div class="form-group">
                            <label>Description</label>
                            <input type="text" class="form-control" name="description" ng-model="formData2.description"
                                required maxlength="128" 
                                [ngClass]="{'invalid-textbox' :myForm2.submitted && !description.valid }"
                                data-toggle="tooltip" title="Describe the List." />
                        </div>
                        <div class="form-group">
                            <label>Who can See this List <label>
                            <select class="form-control" name="view" ng-model="formData2.view"
                                ng-options="grp for grp in myGrpsA" required value="{{currentListView}}"
                                [ngClass]="{'invalid-textbox' :myForm2.submitted && !view.valid }"
                                data-toggle="tooltip" title="Enter the Group that can See this List.">
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Who can Edit this List <label>
                            <select class="form-control" name="edit" ng-model="formData2.edit"
                                ng-options="grp for grp in myGrpsB" placeholder="Select Group" required
                                value={{currentListEdit}}
                                [ngClass]="{'invalid-textbox' :myForm2.submitted && !edit.valid }"
                                data-toggle="tooltip" title="Enter the Group that can Edit this List.">
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Who can Vote/Rank Items in this List <label>
                            <select class="form-control" name="rank" ng-model="formData2.rank"
                                ng-options="grp for grp in myGrpsB" placeholder="Select Group" required
                                value={{currentListRank}}
                                [ngClass]="{'invalid-textbox' :myForm2.submitted && !rank.valid }"
                                data-toggle="tooltip" title="Enter the Group that can Rank this List.">
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary btn-lg" ng-click="modifyMyList()" 
                            ng-disabled="!myForm2.name.$dirty || !myForm2.description.$dirty || !myForm2.view.$dirty || 
                            !myForm2.edit.$dirty || !myForm2.rank.$dirty ||
                            (myForm2.name.$dirty && myForm2.name.$invalid) ||
                            (myForm2.description.$dirty && myForm2.description.$invalid) ||
                            (myForm2.view.$dirty && myForm2.view.$invalid) || 
                            (myForm2.edit.$dirty && myForm2.edit.$invalid) || 
                            (myForm2.rank.$dirty && myForm2.rank.$invalid)" data-toggle="tooltip"
                            title="Modify this List!">Modify</button>
                        <button type="submit" class="btn btn-primary btn-lg"
                            ng-click="modifyMyListCancel()">Cancel</button>
                    </form>
                </span>

            </td>
        </tr>
    </table>

    <div ng-view id=myItemsTable>
        <!-- span ng-if="myItems.length == 0 && aboutToShowRank == true" -->
        <span ng-if="myItems.length == 0 && myItems2.length == 0">
            <h3><span class="fa "></span>{{ currentListName }}: Contains no Items. You must Add Items before you can
                Rank them.
                <button type="submit" class="btn btn-primary btn-sm" id=buttonBackToList ng-click="backToList()">Go
                    Back</button></h3>
        </span>
        <!-- span ng-if="myItems.length == 0 && aboutToShowItems == true" -->
        <span ng-if="myItems.length == 0 && myItems2 == undefined">
            <h3><span class="fa "></span>{{ currentListName }}: Contains no Items.
                <button type="submit" class="btn btn-primary btn-sm" id=buttonBackToList ng-click="backToList()">Go
                    Back</button></h3>
        </span>
        <span ng-if="myItems.length > 0 || myItems2.length > 0">
            <!-- div ng-view id=myItemsTable -->
            <div class="text-centerx">
                <h3><span class="fa "></span>{{ currentListName }}: <span class="label label-infox">(Items:
                    {{ myItems.length }})</span>
                    <button type="submit" class="btn btn-primary btn-sm" ng-click="myCopyLink()"
                    data-toggle="tooltip" 
                    title="Copy a Link to this List. Then paste, into Email to send for example">Copy Link to List</button>
                    <button type="submit" class="btn btn-primary btn-sm" id=buttonCommentForm
                        ng-click="showCommentForm()">{{ buttonCommentFormText }}</button>
                    <button type="submit" class="btn btn-primary btn-sm" id=buttonAnimate
                        ng-click="animateList()">Animate</button>
                    <button type="submit" class="btn btn-primary btn-sm" id=buttonBackToList
                        ng-click="backToList()">Go Back</button>
                </h3>
            </div>
            <span ng-if="myItems2 != undefined">
                <div>
                    <p>Select up to 10 Items for Ranking - Rank them - Then save Your Ranking.</p>
                </div>
            </span>
            <div>
                <table ng-table="myItemsTableParams" border="0" cellspacing="0" cellpadding="0"
                class="table table-striped" >
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <!-- th>Owner</th -->
                        <!-- th>List</th -->
                        <!-- th>Suggestion</th  -->
                        <th>Points</th>
                        <th>Operations</th>
                    </tr>
                    <!-- tbody class="problemcheckboxx" ng-repeat="aItem in myItems | orderBy: ['-rank', 'name'] 
                        | filter:q2 | startFrom:currentPage2*pageSize2 | limitTo:pageSize2" -->
                    <tbody class="problemcheckboxx" ng-repeat="aItem in myItems | orderBy: ['-rank', 'name'] 
                        | filter:q2 | startFrom:currentPage2*pageSize2 | limitTo:pageSize2">
                        <td>{{ aItem.name }}</td>
                        <td>{{ aItem.description }}</td>
                        <!-- td>{{ aItem.owner }}</td -->
                        <!-- td>{{ aItem.list }}</td -->
                        <!-- td>{{ aItem.suggestion }}</td -->
                        <td>{{ aItem.rank }}</td>
                        <td>
                            <span ng-if="myItems2 == undefined && allowEdit">
                                <button type="submit" class="btn btn-primary btn-sm"
                                    ng-click="myEditItem(aItem)" data-toggle="tooltip" 
                                    title="Edit this Item">Edit</button>
                                <button type="submit" class="btn btn-primary btn-sm"
                                    ng-click="myRemoveItem(aItem._id)" data-toggle="tooltip" 
                                    title="Remove this Item from the List">Remove</button>
                            </span>
                            <span ng-if="10 > myItems2.length">
                                <button type="submit" class="btn btn-primary btn-sm"
                                    ng-click="mySelectItem(aItem)" data-toggle="tooltip" 
                                    title="Add to Items to Rank">Rank</button>
                            <span>
                        </td>
                    </tbody>
                    <p class="text-center" ng-show="loading">
                        <span class="fa fa-spinner fa-spin fa-3x"></span>
                    </p>
                </table>
            </div>

            <!-- span ng-if="myItems.length > 5" -->
            <table>
                <tr>&nbsp;</tr>
                <tr>
                    <td>
                        <button ng-disabled="currentPage2 == 0" ng-click="currentPage2=currentPage2-1"
                            class="btn btn-primary btn-sm">Previous</button>
                        {{currentPage2+1}}/{{myNumberOfPages2(getData2().length, pageSize2 )}}
                        <button ng-disabled="currentPage2 >= getData2().length/pageSize2 - 1"
                            ng-click="currentPage2=currentPage2+1" class="btn btn-primary btn-sm">Next</button>
                    </td>
                    <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
                    <td>&nbsp;&nbsp;</td>
                    <td>
                        Set Rows per Page
                        <!-- input ng-model="q2" id="search" class="form-control" placeholder="Set Rows per Page" / -->
                    </td>
                    <td>
                        <select ng-model="pageSize2" id="pageSize2" class="form-control btn btn-primary btn-sm">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="15">15</option>
                            <option value="20">20</option>
                            <option value="25">25</option>
                        </select>
                    </td>
                </tr>
            </table>
            <!-- /span -->

        </span>

        <span ng-if="myItems2.length > 0 ">
            <div ng-view id=myItemsTable2>
                <div class="text-centerx">
                    <h3>&nbsp;</h3>
                    <h3>{{ currentListName }}: Items to Rank: <span
                        class="labelx label-infox">{{ myItems2.length }}</span>
                    </h3>
                </div>
                <div>
                    <p>Set Your Rankings via Up and Down - Then save Your Rankings.</p>
                </div>
                <div>
                    <table ng-table="myItemsTable2Params" border="0" cellspacing="0" cellpadding="0"
                    class="table table-striped" >
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Points</th>
                            <th>My Rank</th>
                            <th>My Points</th>
                            <th>Operations</th>
                        </tr>
                        <tbody class="tableWithItemsToOrder" id="tableWithItemsToOrder" ng-repeat="aItem2 in myItems2">
                            <tr>
                                <td>{{ aItem2.name }}</td>
                                <td>{{ aItem2.description }}</td>
                                <td>{{ aItem2.rank }}</td>
                                <td>{{$index + 1}}</td>
                                <td>{{ myPointsFunction($index + 1,  myItems2.length) }}</td>
                                <td>
                                    <button type="submit" class="btn btn-primary btn-sm"
                                        ng-click="myRemoveItem2(aItem2)" data-toggle="tooltip" 
                                        title="Remove from Items to Rank">Don't Rank</button>
                                    <span ng-if="$index != 0 ">
                                        <button class="btn btn-success" ng-click="moveUp(aItem2, $index  );">Up</button>
                                    </span>
                                    <span ng-if="myItems2.length > ($index + 1) ">
                                        <button class="btn btn-success"
                                            ng-click="moveDown(aItem2, $index );">Down</button>
                                    </span>
                                </td>
                            </tr>
                        </tbody>
                        <p class="text-center" ng-show="loading">
                            <span class="fa fa-spinner fa-spin fa-3x"></span>
                        </p>
                    </table>
                </div>
            </div>
            
            <span ng-if="myItems2.length > 0 ">
                <p></p>
                <span ng-if="myRankingDone">
                    <p>You already Ranked this List. Go to My Lists and Remove My Rank to reRank this List.</p>
                </span>
                <!-- span ng-if="!myRankingDone"><p>myRankingDone false</p></span -->
                <span ng-if="!myRankingDone">
                    <button class="btn btn-success" ng-click="saveMyRanking();"
                    data-toggle="tooltip" 
                    title="Save your Ranking when set they way you want">Save My Ranking</button>
                </span>
            </span>
        </span>

        <span ng-if="myItems2 == undefined">
            <span ng-if="!moreItemsAllowed()">
                <p>This List contains the maximum Items allowed.</p>
            </span>
            <span ng-if="moreItemsAllowed()">
                <div ng-view id=addItemForm>
                    <span id="addItemForm">
                        <h3> Create a new Item: </h3>
                        <span ng-if="myItemNameTaken">
                            <div class="alert alert-danger" id="itemnametaken">Item Name already taken!</div>
                        </span>
                        <form name="myItemForm">
                            <div class="form-group">
                                <label>Item Name</label>
                                <input type="text" class="form-control" name="name" ng-model="formItemData.name"
                                    required placeholder="Item Name" maxlength="32"
                                    [ngClass]="{'invalid-textbox' :myItemForm.submitted && !name.valid }"
                                    data-toggle="tooltip" title="Enter the Item name. Must be unique." />
                            </div>
                            <div class="form-group">
                                <label>Description</label>
                                <input type="text" class="form-control" name="description"
                                    ng-model="formItemData.description" placeholder="Describe this Item" required
                                    maxlength="128"
                                    [ngClass]="{'invalid-textbox' :myItemForm.submitted && !description.detail }"
                                    data-toggle="tooltip" title="Describe the Item." />
                            </div>
                            <!-- button type="submit" class="btn btn-warning btn-lg">Add</button -->
                            <button type="submit" class="btn btn-primary btn-lg" ng-click="createMyItem()" 
                                ng-disabled="!myItemForm.name.$dirty || !myItemForm.description.$dirty || 
                                (myItemForm.name.$dirty && myItemForm.name.$invalid) || 
                                (myItemForm.description.$dirty && myItemForm.description.$invalid) " data-toggle="tooltip"
                                title="Add this new Item!">Add</button>
                        </form>
                    </span>
                </div>
            </span>
        </span>

        <span id="modItemForm">
            <h3> Modify Item: </h3>
            <span ng-if="myItemModNameTaken">
                <div class="alert alert-danger" id="itemmodnametaken">Item Name already taken!</div>
            </span>
            <form name="myModItemForm">
                <div class="form-group">
                    <label>Item Name</label>
                    <input type="text" class="form-control" name="name" ng-model="formModItemData.name"
                        required placeholder="Item Name" maxlength="32"
                        [ngClass]="{'invalid-textbox' :myModItemForm.submitted && !name.valid }"
                        data-toggle="tooltip" title="Enter the Item name. Must be unique." />
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <input type="text" class="form-control" name="description"
                        ng-model="formModItemData.description" placeholder="Describe this Item" required
                        maxlength="128"
                        [ngClass]="{'invalid-textbox' :myModItemForm.submitted && !description.detail }"
                        data-toggle="tooltip" title="Describe the Item." />
                </div>
                <button type="submit" class="btn btn-primary btn-lg" ng-click="modifyMyItem()" 
                    ng-disabled="!myModItemForm.name.$dirty || !myModItemForm.description.$dirty || 
                    (myModItemForm.name.$dirty && myModItemForm.name.$invalid) || 
                    (myModItemForm.description.$dirty && myModItemForm.description.$invalid) " data-toggle="tooltip"
                    title="Modify this Item!">Modify</button>
                    <button type="submit" class="btn btn-primary btn-lg"
                    ng-click="modifyMyItemCancel()">Cancel</button>
            </form>
        </span>

        <table>
            <tr>
                <td>
                    <span id="commentForm">
                        <h3> Add a comment about the {{ currentListName }} List. </h3>
                        <form name="myForm3">
                            <div class="form-group">
                                <label>Comment</label>
                                <input type="text" class="form-control" name="comment" ng-model="formData3.comment"
                                    required maxlength="128"
                                    [ngClass]="{'invalid-textbox' :myForm3.submitted && !comment.valid }"
                                    data-toggle="tooltip" title="Add a comment about the List." />
                            </div>
                            <button type="submit" class="btn btn-primary btn-lg" ng-click="addCommentOnList()"
                                ng-disabled="!myForm3.comment.$dirty ||
                                (myForm3.comment.$dirty && myForm3.comment.$invalid)" data-toggle="tooltip"
                                title="Comment on this List.">Add</button>
                        </form>

                        <span ng-if="0 >= myComments.length">
                            <p>No comments on this List, yet. Add one. </p>
                        </span>
                        <span ng-if="myComments.length > 0">
                            <table ng-table="myItemsTable2Params" border="0" cellspacing="0" cellpadding="0"
                            class="table table-striped" >
                                <tr>
                                    <th>Comments:</th>
                                    <th>By</th>
                                    <th>When</th>
                                    <th>Delete</th>
                                </tr>
                                <tbody class="tableWithItemsToOrder" id="tableWithItemsToOrder" 
                                    ng-repeat="comment in myComments | filter:q3 | startFrom:currentPage3*pageSize3 | 
                                    limitTo:pageSize3">
                                    <tr>
                                        <!-- td>
                                        {{ comment.comment }} by: {{ comment.ownerScreenName }} 
                                        on: {{ myGetDateFromTimeStamp(comment.timeStamp); }}
                                        </td -->
                                        <td>{{ comment.comment }}</td>
                                        <td>{{ comment.ownerScreenName }}</td>
                                        <td>{{ myGetDateFromTimeStamp(comment.timeStamp); }}</td>
                                        <td>
                                            <span ng-if="isMyOwner(comment.ownerEmail)">
                                                <button type="submit" class="btn btn-primary btn-sm"
                                                    ng-click="deleteMyComment(comment)">Delete</button>
                                            </span>
                                        </td>
                                        <td>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>

                            <table>
                                <tr>&nbsp;</tr>
                                <tr>
                                    <td>
                                        <button ng-disabled="currentPage3 == 0" ng-click="currentPage3=currentPage3-1"
                                            class="btn btn-primary btn-sm">Previous</button>
                                        {{currentPage3+1}}/{{myNumberOfPages3(getData3().length, pageSize3 )}}
                                        <button ng-disabled="currentPage3 >= getData3().length/pageSize3 - 1"
                                            ng-click="currentPage3=currentPage3+1"
                                            class="btn btn-primary btn-sm">Next</button>
                                    </td>
                                    <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td>
                                        Set Rows per Page
                                    </td>
                                    <td>
                                        <select ng-model="pageSize3" id="pageSize3"
                                            class="form-control btn btn-primary btn-sm">
                                            <option value="5">5</option>
                                            <option value="10">10</option>
                                            <option value="15">15</option>
                                            <option value="20">20</option>
                                            <option value="25">25</option>
                                        </select>
                                    </td>
                                </tr>
                            </table>
                        </span>

                    </span>
                </td>
            </tr>
        </table>
    </div>


    <div ng-view id=myAnimate>
            
        <!-- div id = "mytitle" style="text-align: center; position:absolute; color:blue;">Top 10 Lists</div -->
        <!-- div id = "mytitle" style="text-align: center; color:blue;">Top 10 Lists</div -->
        <h3 id = "mytitle" style="text-align: center; color:blue;">Top 10 Lists</h3>
     
        <button type="submit" class="btn btn-primary btn-sm" id=buttonAnimateStop
            ng-click="animateStop()">Stop</button>
        <!-- div id = "item10" style="position:absolute; color:blue;">Number 10</div -->
        <div id = "item10" style="text-align: center; position:absolute; color:blue;">Number 10</div>
        <div id = "item9" style="text-align: center; position:absolute; color:blue;">Number 9</div>
        <div id = "item8" style="text-align: center; position:absolute; color:blue;">Number 8</div>
        <div id = "item7" style="text-align: center; position:absolute; color:blue;">Number 7</div>
        <div id = "item6" style="text-align: center; position:absolute; color:blue;">Number 6</div>
        <div id = "item5" style="text-align: center; position:absolute; color:blue;">Number 5</div>
        <div id = "item4" style="text-align: center; position:absolute; color:blue;">Number 4</div>
        <div id = "item3" style="text-align: center; position:absolute; color:blue;">Number 3</div>
        <div id = "item2" style="text-align: center; position:absolute; color:blue;">Number 2</div>
        <div id = "item1" style="text-align: center; position:absolute; color:blue;">Number 1</div>
    </div>
<!-- /div -->
<!-- /div --> 
<!-- /div -->
</div>
</body>
</html>