<!doctype html>
<html ng-app="scotchTodo" lang="en">

<head X-Content-Type-Options: nosniff>
    <!-- SPELLS -->
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js"></script><!-- load angular -->
    <!-- ??? Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <!-- ??? Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.8/angular-filter.min.js"></script>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="/" />

    <script>
        var app = angular.module('myListsController', [])

            .controller('mainController', ['$scope', '$http', 'myLists', '$filter', function ($scope, $http, myLists, $filter) {
                console.log("myPublicLists.ejs: myListsController mainController reached");
                //console.log("$scope.myListItems " + $scope.myListItems);
                //console.log("myPublicLists.ejs: $scope: " + JSON.stringify($scope));
                //console.log("myPublicLists.ejs: $http: " + JSON.stringify($http));
                //console.log("myPublicLists.ejs: $http: " + $http);
                //console.log("myPublicLists.ejs: $scope: " + $scope);
                $scope.formData = {};
                $scope.loading = true;
                $scope.myListsTableParams = {};
                $scope.myPublicGrps = [];
                $("#listnametaken").hide();
                $("#itemnametaken").hide();
                $("#myItemsTable").hide();
                $("#addItemForm").hide();

                $scope.currentPage = 0;
                $scope.currentPage2 = 0;
                $scope.pageSize = 10;
                $scope.pageSize2 = 10;
                $scope.q = '';
                $scope.q2 = '';
                $scope.myLists = [];
                $scope.myItems = [];

                // GET =====================================================================
                //myLists.get()
                  //  .success(function (data) {
                    //    console.log("myPublicLists.ejs: mainController myLists.get success");
                    //    $scope.myLists = data;
                    //    $scope.loading = false;
                    //    $("#listnametaken").hide();
                    //    $("#itemnametaken").hide();
                    //    $("#myItemsTable").hide();
                    //    $("#addItemForm").hide();
                    //});
                
                <% if (typeof(myListItems) != 'undefined') { %>
                    $scope.currentListName = "<%= myListItems %>";
                    myLists.getItems("<%= myListItems %>")
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            $("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                        });
                <% } %>

                myLists.getAllPublicGrps()
                    .success(function (pubgrpdata) {
                        console.log("myAdminLists.ejs: mainController myLists.getAllPublicGrps success");
                        $scope.myPublicGrps = pubgrpdata;
                        for (var i = 0; i < $scope.myPublicGrps.length; i++) {
                            console.log("$scope.myPublicGrps[i].grp = " + $scope.myPublicGrps[i].grp);
                        }
                    });

                $scope.getData = function () {
                    //return $filter('filter')($scope.data, $scope.q)
                    return $filter('filter')($scope.myLists, $scope.q)
                };

                $scope.numberOfPages = function () {
                    console.log("$scope.numberOfPages $scope.getData().length: " + $scope.getData().length +
                        " $scope.pageSize: " + $scope.pageSize)
                    return Math.ceil($scope.getData().length / $scope.pageSize);
                };

                $scope.$watch('q', function (newValue, oldValue) {
                    console.log("$scope.$watch(q) reached");
                    if (oldValue != newValue) {
                        $scope.currentPage = 0;
                    }
                }, true
                );

                $scope.getData2 = function () {
                    //return $filter('filter')($scope.data, $scope.q)
                    return $filter('filter')($scope.myItems, $scope.q2)
                };

                $scope.myNumberOfPages2 = function (a, b) {
                    return Math.ceil(a / b);
                };

                $scope.numberOfPages2 = function () {
                    console.log("$scope.numberOfPages2 $scope.getData2().length: " + $scope.getData2().length +
                        " $scope.pageSize2: " + $scope.pageSize2);
                    //return Math.ceil($scope.getData2().length/$scope.pageSize2);
                    return Math.ceil($scope.getData2().length / $scope.pageSize2);
                };

                $scope.$watch('q2', function (newValue, oldValue) {
                    console.log("$scope.$watch(q2) reached");
                    if (oldValue != newValue) {
                        $scope.currentPage2 = 0;
                    }
                }, true
                );

                // CREATE ==================================================================
                $scope.createMyList = function () {
                    console.log("myPublicLists.ejs:  mainController createMyList ");
                    if ($scope.formData.name != undefined) {
                        $scope.loading = true;

                        console.log("myPublicLists.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                        myLists.create($scope.formData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myPublicLists.ejs: createMyList ERROR data: " + JSON.stringify(data));
                                console.log("myPublicLists.ejs: createMyList ERROR data.message: " + data.message);
                                message = data.message;
                                $("#listnametaken").show();

                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                console.log("myPublicLists.ejs: createMyList $scope.myLists: " + JSON.stringify($scope.myLists));
                            });
                    }
                };

                $scope.deleteMyList = function (listName) {
                    console.log("myPublicLists.ejs:  mainController deleteMyList listName: " + listName);
                    //$scope.loading = true;

                    if (confirm('Are you sure you want to delete this record ?') == true) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.delMyList(listName)
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                $("#itemnametaken").hide();
                                $("#myItemsTable").hide();
                                $("#addItemForm").hide();
                            });
                    } else {
                        console.log(" No delete");
                    }
                };

                $scope.itemsOfList2 = function (listName, editGrp, rankGrp) {
                    console.log("myLists.ejs:  mainController itemsOfList2 listName: " + listName + " editGrp: " +
                        editGrp + " rankGrp: " + rankGrp);
                    $("#addListForm").hide();
                    $scope.currentListName = listName;
                    $scope.editGrp = editGrp;
                    $scope.rankGrp = rankGrp;
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            $("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                        });
                }

                $scope.itemsOfList = function (listName) {
                    console.log("myLists.ejs:  mainController itemsOfList listName: " + listName);
                    $("#addListForm").hide();
                    $scope.currentListName = listName;
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            $("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                        });
                };

                $scope.myCopyLink = function (listName) {
                    console.log("myCopyLink call with $scope.currentListName = " + $scope.currentListName);
                    console.log("window.location.href: " + window.location.href);
                    var selBox = document.createElement('textarea');
                    selBox.style.position = 'fixed';
                    selBox.style.left = '0';
                    selBox.style.top = '0';
                    selBox.style.opacity = '0';
                    //selBox.value = "http://localhost:8080/myPublicListsItems/" + $scope.currentListName;
                    //selBox.value = window.location.href + "Items/" + $scope.currentListName;
                    selBox.value = window.location.href;
                    document.body.appendChild(selBox);
                    selBox.focus();
                    selBox.select();
                    document.execCommand('copy');
                    document.body.removeChild(selBox);
                }

                $scope.createMyItem = function () {
                    console.log("myLists.ejs:  mainController createMyItem ");
                    if ($scope.formItemData.name != undefined) {
                        $scope.loading = true;
                        $scope.formItemData.list = $scope.currentListName;
                        console.log("myLists.ejs: $scope.formItemData: " + JSON.stringify($scope.formItemData));
                        myLists.createItem($scope.formItemData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: createMyItem ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: createMyItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                $("#itemnametaken").show();
                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formItemData = {}; // clear the form so our user is ready to enter another
                                $scope.myItems = data; // 
                                $("#itemnametaken").hide();
                                console.log("myLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                            });
                    }
                };

                $scope.inPublicGroups = function (tmpGrp) {
                    console.log("myPublicLists.ejs:  mainController inPublicGroups  tmpGrp: " + tmpGrp);
                    //return $scope.myPublicGrps.includes(tmpGrp); // this is an array of objects so this doesnt work!
                    return $scope.myPublicGrps.some(item => item.grp === tmpGrp);
                    //return true;
                };

            }]);

        app.filter('startFrom', function () {
            //filter('startFrom', function() {
            //function filter('startFrom', function() {
            return function (input, start) {
                start = +start;
                return input.slice(start);
            }
        });

    </script>

    <script>
        angular.module('myListsService', [])

            .factory('myLists', ['$http', function ($http) {
                return {
                    get: function () {
                        console.log("myPublicLists.ejs: service myLists get");
                        return $http.get('/api/myPublicLists');
                    },
                    create: function (Data) {
                        console.log("myPublicLists.ejs: service myLists create");
                        return $http.post('/api/myLists', Data);
                    },
                    delete: function (id) {
                        console.log("myPublicLists.ejs: service myLists delete");
                        return $http.delete('/api/myLists/' + id);
                    },
                    change: function (id) {
                        console.log("myPublicLists.ejs: service myLists change");
                        return $http.get('/api/myLists/' + id);
                    },
                    getItems: function (listName) {
                        console.log("myLists.ejs: service myLists getItems");
                        return $http.get('/api/myPublicItems/' + listName);
                    },
                    createItem: function (Data) {
                        console.log("myLists.ejs: service myLists createItem");
                        return $http.post('/api/myItems', Data);
                    },
                    getAllPublicGrps: function () {
                        console.log("myAdminLists.ejs: service myLists getAllPublicGrps");
                        return $http.get('/api/getAllPublicGrps');
                    }
                }
            }]);

    </script>

    <script>
        angular.module('scotchTodo', ['myListsController', 'myListsService', 'angular.filter']);
    </script>

    <title>Top 10 Lists</title>
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" / -->
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" / -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        body {
            padding-top: 0px;
            word-wrap: break-word;
        }
    </style>
</head>

<body class="bg-secondary text-white">
    <div id='main' class="container-fluid">
        <% include myNavBar %>
        <% if (typeof(myListItems) != 'undefined') { %>
        <div>
            <!-- p class="alert alert-danger"><%= myListItems %></p -->
        </div>
        {{ $scope.itemsOfList(myListItems) }}
        <% } %>
        <div ng-viewx>
            <!-- h3><span class="fa fa-sign-in"></span>The Lists</h3 -->
            <div ng-controller="mainController">
                <div class="container">
                    <table>
                        <tr>
                            <td>
                                <div ng-viewyvx id=myListsTable>
                                    <h3><span class="fa fa-sign-in"></span>The Lists</h3>
                                    <div class="text-centerx">
                                        <!-- h3>Number of Lists: <span
                                                class="labelx label-infox">({{ myLists.length }})</span>
                                        </h3 -->
                                    </div>
                                    <div id="myLists-listx">
                                        <!-- div class="col-sm-4 col-sm-offset-4" -->
                                        <div>
                                            <table ng-table="myListsTableParams" border="1" cellspacing="0"
                                                cellpadding="4">
                                                <tr>
                                                    <th>Name</th>
                                                    <th>Description</th>
                                                    <th>Items</th>
                                                </tr>
                                                <!-- tbody class="problemcheckboxx" ng-repeat="aList in myLists | orderBy: 'name'" -->
                                                <tbody class="problemcheckboxx" ng-repeat="aList in myLists | orderBy: 'name'
                                                | filter:q | startFrom:currentPage*pageSize | limitTo:pageSize">

                            <td>{{ aList.name }}</td>
                            <td>{{ aList.description }}</td>

                            <td>
                                <!-- button type="submit" class="btn btn-primary btn-sm" ng-click="itemsOfList(aList.name)">Items</button -->
                                <button type="submit" class="btn btn-primary btn-sm"
                                    ng-click="itemsOfList2(aList.name, aList.edit, aList.rank)">Items</button>
                            </td>
                            </tbody>
                            <p class="text-center" ng-show="loading">
                                <span class="fa fa-spinner fa-spin fa-3x"></span>
                            </p>
                    </table>
                </div>
                <table>
                    <tr>&nbsp;</tr>
                    <tr>
                        <td>
                            <button ng-disabled="currentPage == 0" ng-click="currentPage=currentPage-1"
                                class="btn btn-primary btn-sm">Previous</button>
                            {{currentPage+1}}/{{numberOfPages()}}
                            <button ng-disabled="currentPage >= getData().length/pageSize - 1"
                                ng-click="currentPage=currentPage+1" class="btn btn-primary btn-sm">Next</button>
                        </td>
                        <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td>&nbsp;&nbsp;</td>
                        <td>
                            Set Rows per Page
                            <!-- input ng-model="q" id="search" class="form-control" placeholder="Set Rows per Page" / -->
                        </td>
                        <td>
                            <select ng-model="pageSize" id="pageSize" class="form-control btn btn-primary btn-sm">
                                <option value="5">5</option>
                                <option value="10">10</option>
                                <option value="15">15</option>
                                <option value="20">20</option>
                            </select>
                        </td>
                    </tr>
                </table>
            </div>
            </td>
            <td>
        </div>

        </td>
        </tr>
        </table>

        <div ng-viewyvx id=myItemsTable>
            <div class="text-centerx">
                <h3><span class="fa "></span>{{ currentListName }}: <span class="label label-infox">(Items:
                        {{ myItems.length }})</span>
                    <button type="submit" class="btn btn-primary btn-sm" ng-click="myCopyLink()">Copy Link to
                        List</button></h3>
                <span ng-if=" inPublicGroups(editGrp) && editGrp != 'Just Me' ">
                    <p> Join the group: {{ editGrp }}, to Edit this List</p>
                </span>
                <span ng-if=" inPublicGroups(rankGrp) && rankGrp != 'Just Me' ">
                    <p> Join the group: {{ rankGrp }}, to Rank this List</p>
                </span>
            </div>
            <div>
                <table ng-table="myItemsTableParams" border="1" cellspacing="0" cellpadding="4">
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Points</th>
                    </tr>
                    <!-- tbody class="problemcheckboxx" ng-repeat="aItem in myItems | orderBy: ['-rank', 'name'] " -->
                    <tbody class="problemcheckboxx" ng-repeat="aItem in myItems | orderBy: ['-rank', 'name'] 
                    | filter:q2 | startFrom:currentPage2*pageSize2 | limitTo:pageSize2">

                        <td>{{ aItem.name }}</td>
                        <td>{{ aItem.description }}</td>
                        <td>{{ aItem.rank }}</td>

                    </tbody>
                    <p class="text-center" ng-show="loading">
                        <span class="fa fa-spinner fa-spin fa-3x"></span>
                    </p>
                </table>
            </div>
            <!--/div -->

            <table>
                <tr>&nbsp;</tr>
                <tr>
                    <td>
                        <button ng-disabled="currentPage2 == 0" ng-click="currentPage2=currentPage2-1"
                            class="btn btn-primary btn-sm">Previous</button>
                        {{currentPage2+1}}/{{myNumberOfPages2(getData2().length, pageSize2 )}}
                        <button ng-disabled="currentPage2 >= getData2().length/pageSize2 - 1"
                            ng-click="currentPage2=currentPage2+1" class="btn btn-primary btn-sm">Next</button>
                    </td>
                    <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
                    <td>&nbsp;&nbsp;</td>
                    <td>
                        Set Rows per Page
                        <!-- input ng-model="q2" id="search" class="form-control" placeholder="Set Rows per Page" / -->
                    </td>
                    <td>
                        <select ng-model="pageSize2" id="pageSize2" class="form-control btn btn-primary btn-sm">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="15">15</option>
                            <option value="20">20</option>
                            <option value="25">25</option>
                        </select>
                    </td>

                </tr>
            </table>
        </div>
    </div>
    </div>
</body>

</html>