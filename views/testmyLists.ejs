<!doctype html>
<html ng-app="scotchTodo" lang="en">

<head X-Content-Type-Options: nosniff>

    <!-- SPELLS -->
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js"></script><!-- load angular -->
    <!-- script src="//ajax.googleapis.com/ajax/libs/angularjs/1.7.8/angular.min.js"></script -->
    <!-- load angular -->
    <!-- ??? Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <!-- ??? Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.8/angular-filter.min.js"></script>

    <!-- script>import { PaginationModule } from 'ngx-pagination-bootstrap'</script -->

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <base href="/" />

    <script>
        var app = angular.module('myListsController', [])
            .controller('mainController', ['$scope', '$http', 'myLists',  '$filter', function ($scope, $http, myLists, $filter) {
                console.log("myLists.ejs: myListsController mainController reached");
                $scope.formData = {};
                $scope.formItemData = {};
                $scope.loading = true;
                $scope.myListsTableParams = {};
                $scope.myRankedLists = [];
                $scope.myGrps = [];
                $scope.myGrpsA = [];
                $scope.myGrpsB = [];
                $scope.myPublicGrps = [];
                $scope.maxNumListsPerUser = 10;
                $scope.maxNumItemsInList = 25;
                console.log("C");
                $scope.myRankingDone = false;
                $scope.myItemNameTaken = false;
                var userEmail = "<%= user.local.email %>";
                $("#listnametaken").hide();
                //$("#itemnametaken").hide();
                $("#myItemsTable").hide();
                $("#addItemForm").hide();
                $("#addListForm").hide();

                $scope.currentPage = 0;
                $scope.currentPage2 = 0;
                $scope.pageSize = 10;
                $scope.pageSize2 = 10;
                //$scope.data = [];
                $scope.q = '';
                $scope.q2 = '';
                $scope.myLists = [];
                $scope.myItems = [];

                // GET =====================================================================
                myLists.get(userEmail)
                    .success(function (data) {
                        console.log("myLists.ejs: mainController myLists.get success");
                        $scope.myLists = data;
                        $scope.loading = false;
                        $("#listnametaken").hide();
                        //$("#itemnametaken").hide();
                        $("#myItemsTable").hide();
                        $("#addItemForm").hide();
                        $("#addListForm").hide();

                        ////$scope.list = $scope.$parent.personList
                        //$scope.list = $scope.myLists;
                        //$scope.config = {
                        //  itemsPerPage: 5,
                        //  fillLastPage: true
                        //};
                    });

                    myLists.getAllGrps()
                    .success(function (grpdata) {
                        console.log("myAdminLists.ejs: mainController myLists.getAllGrps success");
                        //$scope.myGrps = grpdata;
                        //var tmpgrpdataA = grpdata;
                        //var tmpgrpdataB = grpdata;
                        //$scope.myGrpsA = tmpgrpdataA;
                        //$scope.myGrpsB = grpdata;
                        //$scope.myGrps.unshift("Everyone" , "Just Me");
                        //$scope.myGrpsA.unshift("Just Me");

                        $scope.myGrpsA.push("Everyone");
                        $scope.myGrpsA.push("Just Me");
                        $scope.myGrpsB.push("Just Me");
                        for (var i = grpdata.length - 1; i > -1; i--) {
                            //console.log("grpdata[i] = " + grpdata[i]);
                            $scope.myGrps.push(grpdata[i]);
                            $scope.myGrpsA.push(grpdata[i]);
                            $scope.myGrpsB.push(grpdata[i]);
                        }

                        //for (var i = 0; i < $scope.myGrpsA.length; i++) {
                        //  console.log("$scope.myGrpsA[i] = " + $scope.myGrpsA[i]);
                        //}
                        //$scope.myGrpsB = tmpgrpdataB;
                        //$scope.myGrpsB.unshift("Everyone" , "Just Me");
                        //console.log("myAdminLists.ejs: myLists.getAllGrps: $scope.myGrps: " + JSON.stringify($scope.myGrps));
                        //for (var i = 0; i < $scope.myGrpsB.length; i++) {
                        //  console.log("$scope.myGrpsB[i] = " + $scope.myGrpsB[i]);
                        //}

                    });

                myLists.getAllPublicGrps()
                    .success(function (pubgrpdata) {
                        console.log("myAdminLists.ejs: mainController myLists.getAllPublicGrps success");
                        $scope.myPublicGrps = pubgrpdata;
                        //for (var i = 0; i < $scope.myPublicGrps.length; i++) {
                        //  console.log("$scope.myPublicGrps[i].grp = " + $scope.myPublicGrps[i].grp);
                        //}
                    });

                myLists.rankItemsGet()
                    .success(function (myRankedItems) {
                        console.log("myAdminListsRank.ejs: mainController myLists.rankItemsGet success");
                        $scope.myRankedItems = myRankedItems;
                        //console.log("myAdminListsRank.ejs: myLists.getAllGrps: $scope.myGrps: " + JSON.stringify($scope.myRankedItems));
                        var myRankedListsTmp = [];
                        for (var i = 0; i < $scope.myRankedItems.length; i++) {
                            //console.log("$scope.myRankedItems[i].listName = " + $scope.myRankedItems[i].listName);
                            myRankedListsTmp[i] = $scope.myRankedItems[i].listName;
                        }
                        $scope.myRankedLists = Array.from(new Set(myRankedListsTmp));
                        //for (var i = 0; i < $scope.myRankedLists.length; i++) {
                        //  console.log("$scope.myRankedLists = " + $scope.myRankedLists[i]);
                        //}
                    });

                $scope.getData = function () {
                    //return $filter('filter')($scope.data, $scope.q)
                    return $filter('filter')($scope.myLists, $scope.q)
                };

                $scope.numberOfPages = function () {
                    console.log("$scope.numberOfPages $scope.getData().length: " + $scope.getData().length +
                        " $scope.pageSize: " + $scope.pageSize)
                    return Math.ceil($scope.getData().length / $scope.pageSize);
                };

                $scope.$watch('q', function (newValue, oldValue) {
                    console.log("$scope.$watch(q) reached");
                    if (oldValue != newValue) {
                        $scope.currentPage = 0;
                    }
                }, true
                );

                $scope.getData2 = function () {
                    //return $filter('filter')($scope.data, $scope.q)
                    return $filter('filter')($scope.myItems, $scope.q2)
                };

                $scope.myNumberOfPages2 = function (a, b) {
                    return Math.ceil(a / b);
                };

                $scope.numberOfPages2 = function () {
                    console.log("$scope.numberOfPages2 $scope.getData2().length: " + $scope.getData2().length +
                        " $scope.pageSize2: " + $scope.pageSize2);
                    //return Math.ceil($scope.getData2().length/$scope.pageSize2);
                    return Math.ceil($scope.getData2().length / $scope.pageSize2);
                };

                $scope.$watch('q2', function (newValue, oldValue) {
                    console.log("$scope.$watch(q2) reached");
                    if (oldValue != newValue) {
                        $scope.currentPage2 = 0;
                    }
                }, true
                );

                 // CREATE ==================================================================
                 $scope.createMyList = function () {
                    console.log("myLists.ejs:  mainController createMyList ");
                    if ($scope.formData.name != undefined) {
                        $scope.loading = true;
                        $scope.formData.owner = userEmail;
                        console.log("myLists.ejs: $scope.formData: " + JSON.stringify($scope.formData));
                        myLists.create($scope.formData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: createMyList ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: createMyList ERROR data.message: " + data.message);
                                message = data.message;
                                $("#listnametaken").show();
                            })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                console.log("myLists.ejs: createMyList $scope.myLists: " + JSON.stringify($scope.myLists));
                                $("#addListForm").hide();
                                $("#myListsTable").show();
                            });
                    };
                };

                $scope.deleteMyList = function (id) {
                    console.log("myLists.ejs:  mainController deleteMyList id: " + id);
                    //$scope.loading = true;
                    if (confirm('Are you sure you want to delete this list ?') == true) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.delMyList({ id: id, owner: userEmail })
                            .success(function (data) {
                                $scope.loading = false;
                                $scope.formData = {}; // clear the form so our user is ready to enter another
                                $scope.myLists = data; // 
                                $("#listnametaken").hide();
                                //$("#itemnametaken").hide();
                                $("#myItemsTable").hide();
                                $("#addItemForm").hide();
                            });
                    } else {
                        console.log(" No delete");
                    };
                };

                $scope.showNewListForm = function () {
                    //console.log("myLists.ejs:  mainController showNewListForm ");
                    $("#myListsTable").hide();
                    $("#addListForm").show();
                };

                $scope.inMyGroups = function (tmpGrp) {
                    //console.log("myLists.ejs:  mainController inMyGroups  tmpGrp: " + tmpGrp);
                    return $scope.myGrps.includes(tmpGrp);
                    //return true;
                };

                $scope.isMyOwner = function (tmpUser) {
                    //console.log("myLists.ejs:  mainController isMyOwner  tmpUser: " + tmpUser);
                    if (tmpUser == userEmail) {
                        return true;
                    } else {
                        return false;
                    };
                };

                $scope.moreListsAllowed = function () {
                    console.log("moreListsAllowed reached");
                    if ($scope.myLists == undefined) return true;
                    console.log("moreListsAllowed $scope.myLists.length : " + $scope.myLists.length);
                    //$("#itemnametaken").hide();
                    var tmpLists = $scope.myLists.filter(function (myList) {
                        return myList.owner == userEmail;
                    });
                    console.log("moreListsAllowed tmpLists.length : " + tmpLists.length);
                    if (tmpLists.length < $scope.maxNumListsPerUser) {
                        return true;
                    } else {
                        return false;
                    };
                };

                $scope.moreItemsAllowed = function () {
                    console.log("moreItemsAllowed reached");
                    if ($scope.myItems == undefined) return true;
                    console.log("moreItemsAllowed $scope.myItems.length : " + $scope.myItems.length);
                    if ($scope.myItems.length < $scope.maxNumItemsInList) {
                        return true;
                    } else {
                        return false;
                    };
                };

                $scope.itemsOfList = function (listName) {
                    console.log("myLists.ejs:  mainController itemsOfList listName: " + listName);
                    $("#addListForm").hide();
                    $scope.currentListName = listName;
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            //$("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                        });
                };

                //<span ng-if="inMyGroups(aList.edit) || isMyOwner(aList.owner)">
                $scope.itemsOfList2 = function (listName, editGrp, myOwner) {
                    console.log("myLists.ejs:  mainController itemsOfList2 listName: " + listName +
                        " editGrp: " + editGrp + " myOwner: " + myOwner);
                    $("#addListForm").hide();
                    $scope.currentListName = listName;
                    $scope.allowEdit = false;
                    if ($scope.inMyGroups(editGrp) || $scope.isMyOwner(myOwner)) {
                        $scope.allowEdit = true;
                    };
                    console.log("myLists.ejs:  mainController itemsOfList2 $scope.allowEdit: " + $scope.allowEdit);
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $("#listnametaken").hide();
                            //$("#itemnametaken").hide();
                            $scope.myItemNameTaken = false;
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            if ($scope.allowEdit) {
                                $("#addItemForm").show();
                            };
                        });
                };

                $scope.itemsOfListRank = function (listName) {
                    console.log("myLists.ejs:  mainController itemsOfListRank listName: " + listName);
                    $("#addListForm").hide();
                    $scope.currentListName = listName;
                    //$scope.myRankingDone = false;
                    myLists.getItems(listName)
                        .success(function (data) {
                            $scope.loading = false;
                            $scope.formData = {}; // clear the form so our user is ready to enter another
                            $scope.myItems = data; // 
                            $scope.myItems2 = [];
                            $("#listnametaken").hide();
                            //$("#itemnametaken").hide();
                            $("#myListsTable").hide();
                            $("#myItemsTable").show();
                            $("#addItemForm").show();
                        });
                };

                $scope.myCopyLink = function (listName) {
                    console.log("myCopyLink call with $scope.currentListName = " + $scope.currentListName);
                    console.log("window.location.href: " + window.location.href);
                    var selBox = document.createElement('textarea');
                    selBox.style.position = 'fixed';
                    selBox.style.left = '0';
                    selBox.style.top = '0';
                    selBox.style.opacity = '0';
                    //selBox.value = "http://localhost:8080/myPublicListsItems/" + $scope.currentListName; /myPublicListsItems
                    var tmpURLx = window.location.href;
                    tmpURLx = tmpURLx.replace("myLists", "myPublicLists");
                    //selBox.value =  window.location.href + "Items/" + $scope.currentListName;
                    selBox.value = tmpURLx + "Items/" + $scope.currentListName;
                    document.body.appendChild(selBox);
                    selBox.focus();
                    selBox.select();
                    document.execCommand('copy');
                    document.body.removeChild(selBox);
                }
            
                $scope.createMyItem = function () {
                    console.log("myLists.ejs:  mainController createMyItem ");
                    //console.log("myLists.ejs: $scope.myItems: " + JSON.stringify($scope.myItems));
                    if ($scope.formItemData.name != undefined) {
                        if (checkForDupItem()) {
                            //$("#itemnametaken").show();
                            return;
                        }
                        $scope.loading = true;
                        $scope.formItemData.list = $scope.currentListName;
                        $scope.formItemData.owner = userEmail;
                        console.log("myLists.ejs: $scope.formItemData: " + JSON.stringify($scope.formItemData));
                        myLists.createItem($scope.formItemData)
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: createMyItem ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: createMyItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                //$("#itemnametaken").show();
                            })
                            .success(function (data) {
                                //$scope.loading = false;
                                $scope.formItemData = {}; // clear the form so our user is ready to enter another
                                //$("#itemnametaken").hide();
                                $scope.myItems = data; // 

                                myLists.get(userEmail)
                                    .success(function (dataX) {
                                        //console.log("myLists.ejs: mainController myLists.get success");
                                        $scope.myLists = dataX;
                                        $scope.loading = false;
                                        //console.log("myLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                                    });
                            });
                    };
                };

                $scope.myRemoveItem = function (id) {
                    console.log("myLists.ejs:  mainController myRemoveItem ");
                    if (confirm("Really remove this item from the list?")) {
                        console.log(" yes delete");
                        $scope.loading = true;
                        myLists.deleteItem({ "listName": $scope.currentListName, "id": id })
                            .error(function (data) {
                                $scope.loading = false;
                                console.log("myLists.ejs: myRemoveItem ERROR data: " + JSON.stringify(data));
                                console.log("myLists.ejs: myRemoveItem ERROR data.message: " + data.message);
                                //messageItem = data.message;
                                //$("#itemnametaken").show(); // FIX this
                            })
                            .success(function (data) {
                                //$scope.loading = false;
                                $scope.myItems = data; // 
                                //$("#itemnametaken").hide();
                                console.log("myLists.ejs: createMyItem $scope.myItems: " + JSON.stringify($scope.myItems));
                                // ??? Is this needed ???
                                myLists.get(userEmail)
                                    .success(function (dataX) {
                                        $scope.myLists = dataX;
                                        $scope.loading = false;
                                    });
                            });
                    };
                };

                $scope.myEditItem = function () {
                    console.log("myLists.ejs:  mainController myEditItem ");
                    alert("Not yet implemented!");
                    //if(confirm("Not yet implemented")) {   
                    //  console.log("Yes"); 
                    //} else {
                    //  console.log("No");
                    //}
                };

                $scope.mySelectItem = function (myItem) {
                    console.log("myAdminListsRank.ejs:  mainController mySelectItem ");
                    $scope.myItems2.push(myItem);
                //    $scope.myItems = $scope.myItems.filter(item => item._id !== myItem._id);
                };

                function checkForDupItem() {
                    for (var i = 0; i < $scope.myItems.length; i++) {
                        if ($scope.myItems[i].name == $scope.formItemData.name) {
                            $scope.myItemNameTaken = true;
                            return true;
                        };
                    };
                    $scope.myItemNameTaken = false;
                    return false;
                    //$scope.myItemNameTaken = false;
                };



            }]);
    </script>

    <script>
        angular.module('myListsService', [])
            .factory('myLists', ['$http', function ($http) {
                return {
                    get: function (owner) {
                        console.log("myLists.ejs: service myLists get");
                        //return $http.get('/api/myLists');
                        return $http.get('/api/myListsOwner/' + owner);
                    },
                    create: function (Data) {
                        console.log("myLists.ejs: service myLists create");
                        return $http.post('/api/myLists', Data);
                    },
                    delete: function (id) {
                        console.log("myLists.ejs: service myLists delete");
                        return $http.delete('/api/myLists/' + id);
                    },
                    delMyList: function (Data) {
                        console.log("myLists.ejs: service myLists delMyList");
                        return $http.post('/api/delMyList', Data);
                    },
                    change: function (id) {
                        console.log("myLists.ejs: service myLists change");
                        return $http.get('/api/myLists/' + id);
                    },
                    getItems: function (listName) {
                        console.log("myLists.ejs: service myLists getItems");
                        return $http.get('/api/myItems/' + listName);
                    },
                    createItem: function (Data) {
                        console.log("myLists.ejs: service myLists createItem");
                        return $http.post('/api/myItems', Data);
                    },
                    deleteItem: function (Data) {
                        console.log("myLists.ejs: service myLists deleteItem");
                        return $http.post('/api/myItemsRemove', Data); // + {"listName" : listName, "id" : id});
                    },
                    getAllGrps: function () {
                        console.log("myAdminLists.ejs: service myLists getAllGrps");
                        return $http.get('/api/getAllMyGrps');
                    },
                    getAllPublicGrps: function () {
                        console.log("myAdminLists.ejs: service myLists getAllPublicGrps");
                        return $http.get('/api/getAllPublicGrps');
                    },
                    rankItems: function (Data) {
                        console.log("myAdminListsRank.ejs: service myLists rankItems");
                        return $http.post('/api/myItemsRank', Data);
                    },
                    rankItemsRemove: function (Data) {
                        console.log("myAdminListsRank.ejs: service myLists rankItemsRemove");
                        return $http.post('/api/myItemsRankRemove', Data);
                    },
                    rankItemsGet: function (Data) {
                        console.log("myAdminListsRank.ejs: service myLists rankItemsGet");
                        return $http.post('/api/myItemsRankGet', Data);
                    }
                };
            }]);
    </script>

    <script>
        angular.module('scotchTodo', ['myListsController', 'myListsService', 'angular.filter']); //, 'ngMaterial']);
        //angular.module('scotchTodo', ['myListsController', 'myListsService', 'angular.filter','ngMaterial']);
    </script>
    <title>Top 10 Lists</title>
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" / -->
    <!-- link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" / -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
    <style>
        body {
            padding-top: 0px;
            word-wrap: break-word;
        }
    </style>
</head>

<body class="bg-secondary text-white">
    <div id='mainx' class="container-fluid">
        <% include myNavBar %>
        <div ng-viewx>
            <div ng-controller="mainController">
                <div class="container">
                    <table>
                        <tr>
                            <td>
                                <div ng-view id=myListsTable>
                                    <h3><span class="fa "></span> My Lists ({{ myLists.length }})
                                        <!-- span ng-if="moreListsAllowed()">
                                            <button type="submit" class="btn btn-primary btn-sm"
                                                ng-click="showNewListForm()">New List</button>
                                        </span>
                                        <span ng-if="!moreListsAllowed()">
                                            <p> Maximum number of Lists allowed reached. </p>
                                        </span -->
                                    </h3>
                                    <div id="myLists-listx">
                                        <!-- div class="col-sm-4 col-sm-offset-4" -->
                                        <div>
                                            <table ng-table="myListsTableParams" border="1" cellspacing="0"
                                                cellpadding="4">
                                                <tr>
                                                    <th>Name</th>
                                                    <th>Description</th>
                                                    <th>Owner</th>
                                                    <th>Private</th>
                                                    <th>View Grp</th>
                                                    <th>Edit Grp</th>
                                                    <th>Rank Grp</th>
                                                    <!-- th>Suggestion</th -->
                                                    <!-- th>Vote</th -->
                                                    <th>Items</th>
                                                </tr>
                                                <!-- tbody class="problemcheckboxx" ng-repeat="aList in myLists | orderBy: 'name'
                                                | filter:q | startFrom:currentPage*pageSize | limitTo:pageSize" -->
                                        <tbody class="problemcheckboxx" ng-repeat="aList in myLists | orderBy: 'name' ">
                                                    <td>{{ aList.name }}</td>
                                                    <td>{{ aList.description }}</td>
                                                    <td>{{ aList.owner }}</td>
                                                    <td>{{ aList.private }}</td>
                                                    <td>{{ aList.view }}</td>
                                                    <td>{{ aList.edit }}</td>
                                                    <td>{{ aList.rank }}</td>
                                                    <!-- td>{{ aList.suggestion }}</td -->
                                                    <!-- td>{{ aList.vote }}</td -->
                                                    <!-- td>
                                                        <button type="submit" class="btn btn-primary btn-sm"
                                                        ng-click="itemsOfList2(aList.name, aList.edit, aList.owner)">Items</button>
                                                        <span ng-if="aList.itemCnt == '0' ">
                                                        <span ng-if="inMyGroups(aList.edit) || isMyOwner(aList.owner)">
                                                            <button type="submit" class="btn btn-primary btn-sm"
                                                            ng-click="deleteMyList(aList._id)">Delete</button>
                                                        </span>
                                                        </span>
                                                        <span ng-if="inMyGroups(aList.rank) || isMyOwner(aList.owner)">
                                                        <span ng-if="!myRankedLists.includes(aList.name)">
                                                            <button type="submit" class="btn btn-primary btn-sm"
                                                            ng-click="itemsOfListRank(aList.name)">Rank</button>
                                                        </span>
                                                        <span ng-if="myRankedLists.includes(aList.name)">
                                                            <button type="submit" class="btn btn-primary btn-sm"
                                                            ng-click="RemoveMyRankings(aList.name)">Remove My Rank </button>
                                                        </span>
                                                        </span>
                                                    </td -->
                                                </tbody>
                                                <p class="text-center" ng-show="loading">
                                                    <span class="fa fa-spinner fa-spin fa-3x"></span>
                                                </p>
                                            </table>
                                        </div>
                                    </div>
                                    <!-- /td -->
                                    
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</body>
</html>